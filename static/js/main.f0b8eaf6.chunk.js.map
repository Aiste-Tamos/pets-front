{"version":3,"sources":["components/SiteBottomNavigation.tsx","components/SiteTopNavigation.tsx","pages/About.tsx","pages/Animal.tsx","pages/AnimalList.tsx","logo.svg","components/AppLogoHeader.tsx","pages/Home.tsx","pages/PageNotFound.tsx","pages/PageNotImplemented.tsx","pages/UserProfile.tsx","theme.ts","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx","services/graphql-client.ts"],"names":["useStyles","makeStyles","root","position","bottom","width","SiteBottomNavigation","React","useState","value","setValue","classes","theme","useTheme","useMediaQuery","breakpoints","down","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","component","Link","to","label","icon","ul","margin","padding","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","textAlign","toolbarMenuRow","display","flexDirection","menuItem","hasIconAndText","marginRight","ListItemLink","props","primary","renderLink","useMemo","forwardRef","itemProps","ref","ListItem","button","ListItemIcon","ListItemText","SiteTopNavigation","AppBar","color","elevation","Toolbar","Typography","variant","noWrap","List","aria-label","up","Divider","orientation","flexItem","About","paragraph","Animal","id","useParams","GET_ANIMALS_QUERY","AnimalList","useQuery","loading","error","data","animals","map","name","alignItems","justifyContent","logo","height","pointerEvents","AppLogoHeader","src","alt","align","Home","PageNotFound","PageNotImplemented","UserProfile","createMuiTheme","light","main","dark","secondary","overrides","MuiListItemIcon","minWidth","marginTop","marginBottom","LocationDisplay","location","useLocation","data-testid","pathname","minHeight","backgroundColor","spacing","footer","App","ThemeProvider","MuiTheme","CssBaseline","Container","maxWidth","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","hostname","match","client","ApolloClient","uri","process","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f0b8eaf6.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport PetsTwoToneIcon from '@material-ui/icons/PetsTwoTone';\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone';\n\nconst useStyles = makeStyles({\n    root: {\n        position: 'fixed',\n        bottom: 0,\n        width: '100%',\n    },\n});\n\nexport default function SiteBottomNavigation() {\n    const [value, setValue] = React.useState(0);\n    const classes = useStyles();\n    const theme = useTheme();\n\n    // todo - there will be a problem with active nav if route will change\n\n    return useMediaQuery(theme.breakpoints.down('xs')) ? (\n        <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n                setValue(newValue);\n            }}\n            showLabels\n            className={classes.root}\n        >\n            <BottomNavigationAction component={Link} to=\"/animal-list\" label=\"Animals\" icon={<PetsTwoToneIcon />} />\n            <BottomNavigationAction component={Link} to=\"/search\" label=\"Search\" icon={<SearchTwoToneIcon />} />\n        </BottomNavigation>\n    ) : null;\n}\n","import React from 'react';\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AccountCircleTwoToneIcon from '@material-ui/icons/AccountCircleTwoTone';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { Omit } from '@material-ui/types';\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: 'none',\n        },\n    },\n    appBar: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    toolbar: {\n        flexWrap: 'wrap',\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n        textAlign: 'left',\n    },\n    toolbarMenuRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: 0,\n    },\n    menuItem: {\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    hasIconAndText: {\n        '& .MuiListItemIcon-root': {\n            marginRight: 4,\n        },\n    },\n}));\n\ninterface ListItemLinkProps {\n    icon?: React.ReactElement;\n    primary?: string;\n    to: string;\n    className?: string;\n}\n\nfunction ListItemLink(props: ListItemLinkProps) {\n    const { icon, primary, to, className } = props;\n    const classes = useStyles();\n\n    const renderLink = React.useMemo(\n        () =>\n            React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\n                <RouterLink className={classes.menuItem} to={to} ref={ref} {...itemProps} />\n            )),\n        [to, classes]\n    );\n\n    return (\n        <li>\n            <ListItem className={className} button component={renderLink}>\n                {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n                {primary ? <ListItemText primary={primary} /> : null}\n            </ListItem>\n        </li>\n    );\n}\n\nconst isUserLoggedIn = true;\n\nexport default function SiteTopNavigation() {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <div>\n            <AppBar position=\"fixed\" color=\"default\" elevation={0} className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                        PetBook\n                    </Typography>\n                    <List component=\"nav\" className={classes.toolbarMenuRow} aria-label=\"top navigation\">\n                        {useMediaQuery(theme.breakpoints.up('sm')) ? (\n                            <>\n                                <ListItemLink to=\"/\" primary=\"Home\" />\n                                <ListItemLink to=\"/about\" primary=\"About\" />\n                                {isUserLoggedIn ? <ListItemLink to=\"/animal-list\" primary=\"Animals\" /> : null}\n                            </>\n                        ) : null}\n                        {isUserLoggedIn ? (\n                            <>\n                                <ListItemLink\n                                    to=\"/user-profile\"\n                                    primary=\"UserName\"\n                                    className={classes.hasIconAndText}\n                                    icon={<AccountCircleTwoToneIcon />}\n                                />\n                                <Divider orientation=\"vertical\" flexItem />\n                                <ListItemLink to=\"/logout\" icon={<ExitToAppTwoToneIcon />} />\n                            </>\n                        ) : (\n                            <ListItemLink\n                                to=\"/login\"\n                                primary=\"Login\"\n                                className={classes.hasIconAndText}\n                                icon={<AccountCircleTwoToneIcon />}\n                            />\n                        )}\n                    </List>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\n\nfunction About() {\n    return (\n        <div className=\"About-page\">\n            <Typography variant=\"h3\" component=\"h1\">\n                About page\n            </Typography>\n            <Typography variant=\"body1\" paragraph>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n                ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n                fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n                deserunt mollit anim id est laborum.\n            </Typography>\n            <Typography variant=\"body1\" paragraph>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                dolore magna aliqua. Ut enim ad minim veniam, quis nostrud ex ercitation ullamco laboris nisi ut aliquip\n                ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n                fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n                deserunt mollit anim id est laborum.\n            </Typography>\n            <Typography variant=\"body1\" paragraph>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n                ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n                fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n                deserunt mollit anim id est laborum.\n            </Typography>\n            <Typography variant=\"body1\" paragraph>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n                ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n                fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n                deserunt mollit anim id est laborum.\n            </Typography>\n        </div>\n    );\n}\n\nexport default About;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Typography } from '@material-ui/core';\n\ninterface RouterParams {\n    id: string;\n}\n\nfunction Animal() {\n    const params: RouterParams = useParams();\n    const { id } = params;\n\n    return (\n        <div className=\"Animal-page\">\n            <Typography variant=\"h3\" component=\"h1\">\n                Animal page\n            </Typography>\n            <Typography variant=\"body1\">Referencing Animal ID:{id}</Typography>\n        </div>\n    );\n}\n\nexport default Animal;\n","import { loader } from 'graphql.macro';\nimport React from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport { Typography } from '@material-ui/core';\nimport { Animal } from '../graphql/types';\n\ninterface Response {\n    animals: Animal[];\n}\n\nconst GET_ANIMALS_QUERY = loader('../graphql/queries/animal-list.graphql');\n\nfunction AnimalList() {\n    const { loading, error, data } = useQuery<Response>(GET_ANIMALS_QUERY);\n\n    if (loading) {\n        // TODO: replace with proper UI elements\n        return <p>Loading...</p>;\n    }\n\n    if (error) {\n        // TODO: replace with proper UI elements\n        return <p>Error!</p>;\n    }\n\n    return (\n        <div className=\"AnimalList-page\">\n            <Typography variant=\"h3\" component=\"h1\">\n                AnimalList page\n            </Typography>\n            <ol>{data && data.animals.map(({ id, name }) => <li key={id}>{name}</li>)}</ol>\n        </div>\n    );\n}\n\nexport default AnimalList;\n","export default __webpack_public_path__ + \"static/media/logo.22754045.svg\";","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport logo from '../logo.svg';\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    logo: {\n        height: '40vmin',\n        pointerEvents: 'none',\n    },\n});\n\nfunction AppLogoHeader() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <img src={logo} className={classes.logo} alt=\"logo\" />\n            <Typography variant=\"h3\" component=\"h1\" align=\"center\">\n                Pets information system\n            </Typography>\n        </div>\n    );\n}\n\nexport default AppLogoHeader;\n","import React from 'react';\n\nimport AppLogoHeader from '../components/AppLogoHeader';\n\nfunction Home() {\n    return (\n        <div className=\"Home-page\">\n            <AppLogoHeader />\n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Typography } from '@material-ui/core';\n\nfunction PageNotFound() {\n    return (\n        <div className=\"NotFound-page\">\n            <Typography variant=\"h3\" component=\"h1\">\n                Page Not Found\n            </Typography>\n            <Typography variant=\"body1\">\n                Try navigating to <Link to=\"/\">homepage</Link>\n            </Typography>\n        </div>\n    );\n}\n\nexport default PageNotFound;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Typography } from '@material-ui/core';\n\nfunction PageNotImplemented() {\n    return (\n        <div className=\"NotFound-page\">\n            <Typography variant=\"h3\" component=\"h1\">\n                Page is not implemented yet\n            </Typography>\n            <Typography variant=\"body1\">\n                Try navigating to <Link to=\"/\">homepage</Link>\n            </Typography>\n        </div>\n    );\n}\n\nexport default PageNotImplemented;\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\n\nfunction UserProfile() {\n    return (\n        <div className=\"UserProfile-page\">\n            <Typography variant=\"h3\" component=\"h1\">\n                UserProfile page\n            </Typography>\n            <Typography variant=\"body1\">User and Organization details</Typography>\n        </div>\n    );\n}\n\nexport default UserProfile;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#ffd6c9',\n            main: '#d1a598',\n            dark: '#9f766a',\n        },\n        secondary: {\n            light: '#417565',\n            main: '#13493b',\n            dark: '#002115',\n        },\n    },\n    overrides: {\n        MuiListItemIcon: {\n            root: {\n                minWidth: 'auto',\n                marginTop: 4,\n                marginBottom: 4,\n            },\n        },\n    },\n});\n\nexport default theme;\n","import './App.css';\nimport React from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\n\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport SiteBottomNavigation from './components/SiteBottomNavigation';\nimport SiteTopNavigation from './components/SiteTopNavigation';\nimport About from './pages/About';\nimport Animal from './pages/Animal';\nimport AnimalList from './pages/AnimalList';\nimport Home from './pages/Home';\nimport PageNotFound from './pages/PageNotFound';\nimport PageNotImplemented from './pages/PageNotImplemented';\nimport UserProfile from './pages/UserProfile';\nimport MuiTheme from './theme';\n\nconst LocationDisplay = () => {\n    const location = useLocation();\n    return <div data-testid=\"location-display\">{location.pathname}</div>;\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        backgroundColor: '#e8cdb8',\n    },\n    main: {\n        marginTop: theme.spacing(12),\n        marginBottom: theme.spacing(10),\n    },\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n    },\n}));\n\nexport default function App() {\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={MuiTheme}>\n            <CssBaseline />\n            <div className={classes.root}>\n                <SiteTopNavigation />\n                <Container component=\"main\" className={classes.main} maxWidth=\"lg\">\n                    <Switch>\n                        <Route exact path=\"/about\" component={About} />\n                        <Route exact path=\"/user-profile\" component={UserProfile} />\n                        <Route exact path=\"/animal-list\" component={AnimalList} />\n                        <Route exact path=\"/animal/:id\" component={Animal} />\n                        <Route exact path=\"/search\" component={PageNotImplemented} />\n                        <Route exact path=\"/login\" component={PageNotImplemented} />\n                        <Route exact path=\"/logout\" component={PageNotImplemented} />\n                        <Route exact path=\"/\" component={Home} />\n                        <Route component={PageNotFound} />\n                    </Switch>\n                </Container>\n                <SiteBottomNavigation />\n            </div>\n            <LocationDisplay />\n        </ThemeProvider>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { ApolloProvider } from '@apollo/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createGraphQlClient } from './services/graphql-client';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nconst client = createGraphQlClient();\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <ApolloProvider client={client}>\n                <App />\n            </ApolloProvider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\n\nexport function createGraphQlClient() {\n    return new ApolloClient({\n        uri: process.env.REACT_APP_GRAPHQL_URL,\n        cache: new InMemoryCache(),\n    });\n}\n"],"sourceRoot":""}