{"version":3,"sources":["components/layout/SiteBottomNavigation.tsx","components/layout/SiteTopNavigation.tsx","pages/PageNotFound.tsx","theme.ts","config.ts","utils/auth/Auth0ProviderWithHistory.tsx","utils/auth/PrivateRoute.tsx","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx","services/graphql-client.ts"],"names":["useStyles","makeStyles","root","position","bottom","width","SiteBottomNavigation","React","useState","value","setValue","classes","theme","useTheme","useMediaQuery","breakpoints","down","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","component","Link","to","label","icon","ul","margin","padding","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","textAlign","toolbarMenuRow","display","flexDirection","menuItem","hasIconAndText","marginRight","ListItemLink","props","primary","renderLink","useMemo","forwardRef","itemProps","ref","ListItem","button","ListItemIcon","ListItemText","ListItemButton","onClick","AuthNav","SiteTopNavigation","useAuth0","isAuthenticated","user","loginWithRedirect","logout","AppBar","color","elevation","Toolbar","Typography","variant","noWrap","List","aria-label","up","name","Divider","orientation","flexItem","returnTo","window","location","origin","PageNotFound","defaultTheme","createMuiTheme","main","secondary","light","dark","values","xs","sm","md","lg","xl","overrides","MuiTypography","h1","fontSize","lineHeight","h2","h3","h4","h5","h6","MuiListItemIcon","minWidth","marginTop","marginBottom","config","GRAPHQL_URL","process","AUTH0_DOMAIN","AUTH0_CLIENT_ID","Auth0ProviderWithHistory","children","history","useHistory","domain","clientId","redirectUri","onRedirectCallback","appState","push","pathname","PrivateRoute","LocationDisplay","useLocation","data-testid","minHeight","backgroundColor","spacing","footer","App","ThemeProvider","MuiTheme","CssBaseline","Container","maxWidth","Suspense","fallback","Skeleton","height","exact","path","lazy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.392902a3.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport PetsTwoToneIcon from '@material-ui/icons/PetsTwoTone';\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone';\n\nconst useStyles = makeStyles({\n    root: {\n        position: 'fixed',\n        bottom: 0,\n        width: '100%',\n    },\n});\n\nexport default function SiteBottomNavigation() {\n    const [value, setValue] = React.useState(0);\n    const classes = useStyles();\n    const theme = useTheme();\n\n    // todo - there will be a problem with active nav if route will change\n\n    return useMediaQuery(theme.breakpoints.down('xs')) ? (\n        <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n                setValue(newValue);\n            }}\n            showLabels\n            className={classes.root}\n        >\n            <BottomNavigationAction component={Link} to=\"/animal-list\" label=\"Animals\" icon={<PetsTwoToneIcon />} />\n            <BottomNavigationAction component={Link} to=\"/search\" label=\"Search\" icon={<SearchTwoToneIcon />} />\n        </BottomNavigation>\n    ) : null;\n}\n","import React from 'react';\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\n\nimport { useAuth0 } from '@auth0/auth0-react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AccountCircleTwoToneIcon from '@material-ui/icons/AccountCircleTwoTone';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { Omit } from '@material-ui/types';\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: 'none',\n        },\n    },\n    appBar: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    toolbar: {\n        flexWrap: 'wrap',\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n        textAlign: 'left',\n    },\n    toolbarMenuRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: 0,\n    },\n    menuItem: {\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    hasIconAndText: {\n        '& .MuiListItemIcon-root': {\n            marginRight: 4,\n        },\n    },\n}));\n\ninterface ListItemLinkProps {\n    icon?: React.ReactElement;\n    primary?: string;\n    to: string;\n    className?: string;\n}\n\nfunction ListItemLink(props: ListItemLinkProps) {\n    const { icon, primary, to, className } = props;\n    const classes = useStyles();\n\n    const renderLink = React.useMemo(\n        () =>\n            React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\n                <RouterLink className={classes.menuItem} to={to} ref={ref} {...itemProps} />\n            )),\n        [to, classes]\n    );\n\n    return (\n        <li>\n            <ListItem className={className} button component={renderLink}>\n                {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n                {primary ? <ListItemText primary={primary} /> : null}\n            </ListItem>\n        </li>\n    );\n}\n\ninterface ListItemButtonProps {\n    icon?: React.ReactElement;\n    primary?: string;\n    onClick: () => void;\n    className?: string;\n}\n\nfunction ListItemButton(props: ListItemButtonProps) {\n    const { icon, primary, className, onClick } = props;\n\n    return (\n        <li>\n            <ListItem className={className} button onClick={onClick}>\n                {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n                {primary ? <ListItemText primary={primary} /> : null}\n            </ListItem>\n        </li>\n    );\n}\n\nfunction AuthNav() {\n    return <ListItemLink to=\"/animal-list\" primary=\"Animals\" />;\n}\n\nexport default function SiteTopNavigation() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { isAuthenticated, user, loginWithRedirect, logout } = useAuth0();\n\n    return (\n        <div>\n            <AppBar position=\"fixed\" color=\"default\" elevation={0} className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                        PetBook\n                    </Typography>\n                    <List component=\"nav\" className={classes.toolbarMenuRow} aria-label=\"top navigation\">\n                        {useMediaQuery(theme.breakpoints.up('sm')) ? (\n                            <>\n                                <ListItemLink to=\"/\" primary=\"Home\" />\n                                <ListItemLink to=\"/about\" primary=\"About\" />\n                                {isAuthenticated && <AuthNav />}\n                            </>\n                        ) : null}\n                        {isAuthenticated ? (\n                            <>\n                                <ListItemLink\n                                    to=\"/user-profile\"\n                                    primary={user.name}\n                                    className={classes.hasIconAndText}\n                                    icon={<AccountCircleTwoToneIcon />}\n                                />\n                                <Divider orientation=\"vertical\" flexItem />\n                                <ListItemButton\n                                    icon={<ExitToAppTwoToneIcon />}\n                                    onClick={() =>\n                                        logout({\n                                            returnTo: window.location.origin,\n                                        })\n                                    }\n                                />\n                            </>\n                        ) : (\n                            <ListItemButton\n                                primary=\"Login\"\n                                className={classes.hasIconAndText}\n                                icon={<AccountCircleTwoToneIcon />}\n                                onClick={() => loginWithRedirect()}\n                            />\n                        )}\n                    </List>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Typography } from '@material-ui/core';\n\nfunction PageNotFound() {\n    return (\n        <div className=\"NotFound-page\">\n            <Typography variant=\"h3\" component=\"h1\">\n                Page Not Found\n            </Typography>\n            <Typography variant=\"body1\">\n                Try navigating to <Link to=\"/\">homepage</Link>\n            </Typography>\n        </div>\n    );\n}\n\nexport default PageNotFound;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst defaultTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#e8cdb8',\n        },\n        secondary: {\n            light: '#417565',\n            main: '#13493b',\n            dark: '#002115',\n        },\n    },\n    breakpoints: {\n        values: {\n            xs: 0,\n            sm: 450,\n            md: 768,\n            lg: 1280,\n            xl: 1920,\n        },\n    },\n});\nconst { breakpoints } = defaultTheme;\n\nconst theme = {\n    ...defaultTheme,\n    overrides: {\n        MuiTypography: {\n            h1: {\n                fontSize: '3rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '2.6rem',\n                },\n            },\n            h2: {\n                fontSize: '2.6rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '2.2rem',\n                },\n            },\n            h3: {\n                fontSize: '2.2rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.8rem',\n                },\n            },\n            h4: {\n                fontSize: '1.8rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.6rem',\n                },\n            },\n            h5: {\n                fontSize: '1.8rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.6rem',\n                },\n            },\n            h6: {\n                fontSize: '1.6rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.4rem',\n                },\n            },\n        },\n        MuiListItemIcon: {\n            root: {\n                minWidth: 'auto',\n                marginTop: 4,\n                marginBottom: 4,\n            },\n        },\n    },\n};\n\nexport default theme;\n","interface Config {\n    GRAPHQL_URL: string;\n    AUTH0_DOMAIN: string;\n    AUTH0_CLIENT_ID: string;\n}\n\nconst config: Config = {\n    GRAPHQL_URL: process.env.REACT_APP_GRAPHQL_URL!,\n    AUTH0_DOMAIN: process.env.REACT_APP_AUTH0_DOMAIN!,\n    AUTH0_CLIENT_ID: process.env.REACT_APP_AUTH0_CLIENT_ID!,\n};\n\nexport default config;\n","import React, { ReactChild } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport config from '../../config';\n\nconst Auth0ProviderWithHistory = ({ children }: { children: ReactChild }) => {\n    const history = useHistory();\n\n    const onRedirectCallback = (appState: any) => {\n        history.push(appState?.returnTo || window.location.pathname);\n    };\n\n    return (\n        <Auth0Provider\n            domain={config.AUTH0_DOMAIN}\n            clientId={config.AUTH0_CLIENT_ID}\n            redirectUri={window.location.origin}\n            onRedirectCallback={onRedirectCallback}\n        >\n            {children}\n        </Auth0Provider>\n    );\n};\n\nexport default Auth0ProviderWithHistory;\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\n\nimport { useAuth0 } from '@auth0/auth0-react';\n\nexport default function PrivateRoute(props: RouteProps) {\n    const { isAuthenticated } = useAuth0();\n\n    return isAuthenticated ? <Route {...props} /> : <Redirect to=\"/\" />;\n}\n","import './App.css';\nimport React from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\n\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { Skeleton } from '@material-ui/lab';\nimport SiteBottomNavigation from './components/layout/SiteBottomNavigation';\nimport SiteTopNavigation from './components/layout/SiteTopNavigation';\nimport PageNotFound from './pages/PageNotFound';\nimport MuiTheme from './theme';\nimport Auth0ProviderWithHistory from './utils/auth/Auth0ProviderWithHistory';\nimport PrivateRoute from './utils/auth/PrivateRoute';\n\nconst LocationDisplay = () => {\n    const location = useLocation();\n    return <div data-testid=\"location-display\">{location.pathname}</div>;\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        backgroundColor: '#e8cdb8',\n    },\n    main: {\n        [theme.breakpoints.down('sm')]: {\n            marginTop: 56 + theme.spacing(2), // follow AppBar minHeight: 56\n        },\n        [theme.breakpoints.up('sm')]: {\n            marginTop: 64 + theme.spacing(3), // follow AppBar minHeight: 64\n        },\n        marginBottom: theme.spacing(10),\n    },\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n    },\n}));\n\nexport default function App() {\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={MuiTheme}>\n            <CssBaseline />\n            <Auth0ProviderWithHistory>\n                <div className={classes.root}>\n                    <SiteTopNavigation />\n                    <Container component=\"main\" className={classes.main} maxWidth=\"lg\">\n                        <React.Suspense fallback={<Skeleton variant=\"rect\" height=\"100vh\" />}>\n                            <Switch>\n                                <Route exact path=\"/about\" component={React.lazy(() => import('./pages/About'))} />\n                                <PrivateRoute\n                                    exact\n                                    path=\"/user-profile\"\n                                    component={React.lazy(() => import('./pages/UserProfile'))}\n                                />\n                                <PrivateRoute\n                                    exact\n                                    path=\"/animal-list\"\n                                    component={React.lazy(() => import('./pages/Animals'))}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/animal/:id\"\n                                    component={React.lazy(() => import('./pages/AnimalDetails'))}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/search\"\n                                    component={React.lazy(() => import('./pages/PageNotImplemented'))}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/login\"\n                                    component={React.lazy(() => import('./pages/PageNotImplemented'))}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/logout\"\n                                    component={React.lazy(() => import('./pages/PageNotImplemented'))}\n                                />\n                                <Route exact path=\"/\" component={React.lazy(() => import('./pages/Home'))} />\n                                <Route component={PageNotFound} />\n                            </Switch>\n                        </React.Suspense>\n                    </Container>\n                    <SiteBottomNavigation />\n                </div>\n            </Auth0ProviderWithHistory>\n\n            <LocationDisplay />\n        </ThemeProvider>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { ApolloProvider } from '@apollo/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createGraphQlClient } from './services/graphql-client';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nconst client = createGraphQlClient();\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <ApolloProvider client={client}>\n                <App />\n            </ApolloProvider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport config from '../config';\n\nexport function createGraphQlClient() {\n    return new ApolloClient({\n        uri: config.GRAPHQL_URL,\n        cache: new InMemoryCache(),\n    });\n}\n"],"sourceRoot":""}