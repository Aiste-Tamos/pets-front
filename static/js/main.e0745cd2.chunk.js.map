{"version":3,"sources":["navigation.ts","components/layout/AppBottomNavigation.tsx","components/layout/TopAuthNav.tsx","components/layout/AppTopBar.tsx","components/layout/AppTopNavigation.tsx","pages/PageNotFound.tsx","theme.ts","config.ts","utils/auth/Auth0ProviderWithHistory.tsx","utils/auth/PrivateRoute.tsx","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx","services/graphql-client.ts"],"names":["navigation","authRequired","title","to","pageTitle","useStyles","makeStyles","theme","createStyles","appBar","top","bottom","backgroundColor","palette","primary","light","drawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","fabButton","position","zIndex","right","show","transform","transition","hide","HideOnScroll","props","children","trigger","useScrollTrigger","Slide","appear","direction","in","AppBottomNavigation","classes","history","useHistory","location","useLocation","React","useState","open","setDrawerOpen","isAuthenticated","useAuth0","handleDrawerClose","AppBar","className","color","Toolbar","IconButton","edge","onClick","aria-label","Fab","Drawer","anchor","onClose","role","Typography","variant","Divider","List","filter","item","map","ListItem","button","selected","pathTo","pathname","event","push","handleNavListItemClick","ListItemIcon","ListItemText","TopAuthNav","user","loginWithRedirect","logout","anchorEl","setAnchorEl","Boolean","Button","aria-controls","aria-haspopup","currentTarget","startIcon","name","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","returnTo","window","origin","appbar","flexGrow","AppTopBar","elevation","pages","length","textAlign","link","margin","fontWeight","textTransform","text","secondary","AppTopNavigation","Link","component","NavLink","PageNotFound","defaultTheme","createMuiTheme","main","dark","breakpoints","values","xs","sm","md","lg","xl","overrides","MuiTypography","h1","fontSize","lineHeight","down","h2","h3","h4","h5","h6","MuiListItemIcon","root","minWidth","marginTop","marginBottom","config","GRAPHQL_URL","process","AUTH0_DOMAIN","AUTH0_CLIENT_ID","Auth0ProviderWithHistory","domain","clientId","redirectUri","onRedirectCallback","appState","PrivateRoute","LocationDisplay","data-testid","flexDirection","minHeight","up","footer","App","useTheme","matchesLgScreen","useMediaQuery","ThemeProvider","MuiTheme","CssBaseline","Container","maxWidth","Suspense","fallback","Skeleton","height","exact","path","lazy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","hostname","match","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e0745cd2.chunk.js","sourcesContent":["interface NavigationItem {\n    authRequired: boolean;\n    title: string;\n    to: string;\n    pageTitle: string;\n}\n\nconst navigation: Array<NavigationItem> = [\n    { authRequired: false, title: 'Home', to: '/', pageTitle: 'Welcome' },\n    { authRequired: false, title: 'About', to: '/about', pageTitle: 'About this project' },\n    { authRequired: true, title: 'Animals', to: '/animal-list', pageTitle: 'Animal list' },\n    { authRequired: true, title: 'Favourites', to: '/favourites', pageTitle: 'Favourites' },\n    { authRequired: true, title: 'Reports', to: '/reports', pageTitle: 'Reports' },\n];\n\nexport { navigation };\nexport type { NavigationItem };\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { useAuth0 } from '@auth0/auth0-react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Slide from '@material-ui/core/Slide';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport AddIcon from '@material-ui/icons/Add';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { navigation, NavigationItem } from '../../navigation';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            top: 'auto',\n            bottom: 0,\n            backgroundColor: theme.palette.primary.light,\n        },\n        drawerHeader: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: theme.spacing(0, 3),\n            // necessary for height alignment with app bar\n            ...theme.mixins.toolbar,\n            justifyContent: 'space-between',\n        },\n        fabButton: {\n            position: 'absolute',\n            zIndex: 1,\n            top: -30,\n            right: theme.spacing(3),\n        },\n        show: {\n            transform: 'translateY(0)',\n            transition: 'transform .5s',\n        },\n        hide: {\n            transform: 'translateY(-110%)',\n            transition: 'transform .5s',\n        },\n    })\n);\n\ninterface Props {\n    children: React.ReactElement;\n}\n\nfunction HideOnScroll(props: Props) {\n    const { children } = props;\n    const trigger = useScrollTrigger();\n\n    return (\n        <Slide appear={false} direction=\"up\" in={!trigger}>\n            {children}\n        </Slide>\n    );\n}\n\nexport default function AppBottomNavigation() {\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n    const [open, setDrawerOpen] = React.useState(false);\n    const { isAuthenticated } = useAuth0();\n\n    const handleDrawerOpen = () => {\n        setDrawerOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setDrawerOpen(false);\n    };\n\n    const handleNavListItemClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>, pathTo: string) => {\n        history.push(pathTo);\n        setDrawerOpen(false);\n    };\n\n    const linkToCurrentPage = (pathTo: string) => {\n        return location.pathname === pathTo;\n    };\n\n    const navList = () => (\n        <div role=\"presentation\">\n            <div className={classes.drawerHeader}>\n                <Typography variant=\"h6\">PetBook</Typography>\n                <IconButton edge=\"end\" onClick={handleDrawerClose}>\n                    <CloseIcon />\n                </IconButton>\n            </div>\n            <Divider />\n            <List>\n                {navigation\n                    .filter((item: NavigationItem) => {\n                        return item.authRequired ? isAuthenticated : true;\n                    })\n                    .map((item: NavigationItem) => (\n                        <ListItem\n                            button\n                            key={item.title}\n                            selected={linkToCurrentPage(item.to)}\n                            onClick={event => handleNavListItemClick(event, item.to)}\n                        >\n                            <ListItemIcon>\n                                <ChevronRightIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={item.title} />\n                        </ListItem>\n                    ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <HideOnScroll>\n            <AppBar className={classes.appBar} position=\"fixed\" color=\"default\">\n                <Toolbar>\n                    <IconButton edge=\"start\" onClick={handleDrawerOpen} color=\"inherit\" aria-label=\"open drawer\">\n                        <MenuIcon />\n                    </IconButton>\n                    {/* FAB element should be rendered from the page context */}\n                    {/* FAB should not be a part of this element and scroll should not affect it  */}\n                    <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton}>\n                        <AddIcon />\n                    </Fab>\n                </Toolbar>\n                <Drawer anchor=\"bottom\" open={open} onClose={handleDrawerClose}>\n                    {navList()}\n                </Drawer>\n            </AppBar>\n        </HideOnScroll>\n    );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AccountCircleTwoToneIcon from '@material-ui/icons/AccountCircleTwoTone';\n\nexport default function TopAuthNav() {\n    const { isAuthenticated, user, loginWithRedirect, logout } = useAuth0();\n    const history = useHistory();\n\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleLinkProfile = () => {\n        history.push('/user-profile');\n    };\n\n    return (\n        <div>\n            {isAuthenticated ? (\n                <>\n                    <Button\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        aria-haspopup=\"true\"\n                        onClick={handleMenu}\n                        color=\"inherit\"\n                        startIcon={<AccountCircleTwoToneIcon />}\n                    >\n                        {user.name}\n                    </Button>\n                    <Menu\n                        id=\"menu-appbar\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        keepMounted\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={handleClose}\n                    >\n                        <MenuItem onClick={handleLinkProfile}>Profile</MenuItem>\n                        <MenuItem\n                            onClick={() =>\n                                logout({\n                                    returnTo: window.location.origin,\n                                })\n                            }\n                        >\n                            Logout\n                        </MenuItem>\n                    </Menu>\n                </>\n            ) : (\n                <IconButton aria-label=\"login\" edge=\"end\" onClick={() => loginWithRedirect()} color=\"inherit\">\n                    <AccountCircleTwoToneIcon />\n                </IconButton>\n            )}\n        </div>\n    );\n}\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { navigation, NavigationItem } from '../../navigation';\nimport TopAuthNav from './TopAuthNav';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        appbar: {\n            backgroundColor: 'transparent',\n        },\n        toolbar: {\n            justifyContent: 'space-between',\n        },\n        title: {\n            flexGrow: 1,\n        },\n    })\n);\n\nexport default function AppTopBar() {\n    const classes = useStyles();\n    const location = useLocation();\n\n    const pageTitle = () => {\n        const pages: Array<NavigationItem> = navigation.filter((item: NavigationItem) => item.to === location.pathname);\n        if (pages.length === 1) {\n            return pages[0].pageTitle;\n        }\n        return '';\n    };\n\n    return (\n        <AppBar className={classes.appbar} position=\"static\" color=\"default\" elevation={0}>\n            <Toolbar className={classes.toolbar}>\n                <Typography variant=\"h6\" className={classes.title}>\n                    {pageTitle()}\n                </Typography>\n                <TopAuthNav />\n            </Toolbar>\n        </AppBar>\n    );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { useAuth0 } from '@auth0/auth0-react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Link from '@material-ui/core/Link';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { navigation, NavigationItem } from '../../navigation';\nimport TopAuthNav from './TopAuthNav';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            backgroundColor: theme.palette.primary.light,\n        },\n        title: {\n            flexGrow: 1,\n            textAlign: 'left',\n        },\n        link: {\n            margin: theme.spacing(1, 1.5),\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            color: theme.palette.text.secondary,\n        },\n        // todo: NavLink active class is not working\n    })\n);\n\nexport default function AppTopNavigation() {\n    const classes = useStyles();\n    const { isAuthenticated } = useAuth0();\n\n    return (\n        <AppBar className={classes.appBar} position=\"fixed\" color=\"default\">\n            <Toolbar>\n                <Typography variant=\"h6\" className={classes.title}>\n                    PetBook\n                </Typography>\n                {navigation\n                    .filter((item: NavigationItem) => {\n                        return item.authRequired ? isAuthenticated : true;\n                    })\n                    .map((item: NavigationItem) => (\n                        <Link component={NavLink} className={classes.link} key={item.title} to={item.to}>\n                            {item.title}\n                        </Link>\n                    ))}\n                <TopAuthNav />\n            </Toolbar>\n        </AppBar>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Typography } from '@material-ui/core';\n\nfunction PageNotFound() {\n    return (\n        <div className=\"NotFound-page\">\n            <Typography variant=\"h3\" component=\"h1\">\n                Page Not Found\n            </Typography>\n            <Typography variant=\"body1\">\n                Try navigating to <Link to=\"/\">homepage</Link>\n            </Typography>\n        </div>\n    );\n}\n\nexport default PageNotFound;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst defaultTheme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#e8cdb8',\n            main: '#875e3b',\n            dark: '#4e2c1a',\n        },\n        secondary: {\n            light: '#417565',\n            main: '#13493b',\n            dark: '#002115',\n        },\n    },\n    breakpoints: {\n        values: {\n            xs: 0,\n            sm: 450,\n            md: 768,\n            lg: 1280,\n            xl: 1920,\n        },\n    },\n});\nconst { breakpoints } = defaultTheme;\n\nconst theme = {\n    ...defaultTheme,\n    overrides: {\n        MuiTypography: {\n            h1: {\n                fontSize: '3rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '2.6rem',\n                },\n            },\n            h2: {\n                fontSize: '2.6rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '2.2rem',\n                },\n            },\n            h3: {\n                fontSize: '2.2rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.8rem',\n                },\n            },\n            h4: {\n                fontSize: '1.8rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.6rem',\n                },\n            },\n            h5: {\n                fontSize: '1.8rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.6rem',\n                },\n            },\n            h6: {\n                fontSize: '1.6rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.4rem',\n                },\n            },\n        },\n        MuiListItemIcon: {\n            root: {\n                minWidth: 'auto',\n                marginTop: 4,\n                marginBottom: 4,\n            },\n        },\n    },\n};\n\nexport default theme;\n","interface Config {\n    GRAPHQL_URL: string;\n    AUTH0_DOMAIN: string;\n    AUTH0_CLIENT_ID: string;\n}\n\nconst config: Config = {\n    GRAPHQL_URL: process.env.REACT_APP_GRAPHQL_URL!,\n    AUTH0_DOMAIN: process.env.REACT_APP_AUTH0_DOMAIN!,\n    AUTH0_CLIENT_ID: process.env.REACT_APP_AUTH0_CLIENT_ID!,\n};\n\nexport default config;\n","import React, { ReactChild } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport config from '../../config';\n\nconst Auth0ProviderWithHistory = ({ children }: { children: ReactChild }) => {\n    const history = useHistory();\n\n    const onRedirectCallback = (appState: any) => {\n        history.push(appState?.returnTo || window.location.pathname);\n    };\n\n    return (\n        <Auth0Provider\n            domain={config.AUTH0_DOMAIN}\n            clientId={config.AUTH0_CLIENT_ID}\n            redirectUri={window.location.origin}\n            onRedirectCallback={onRedirectCallback}\n        >\n            {children}\n        </Auth0Provider>\n    );\n};\n\nexport default Auth0ProviderWithHistory;\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\n\nimport { useAuth0 } from '@auth0/auth0-react';\n\nexport default function PrivateRoute(props: RouteProps) {\n    const { isAuthenticated } = useAuth0();\n\n    return isAuthenticated ? <Route {...props} /> : <Redirect to=\"/\" />;\n}\n","import './App.css';\nimport React from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\n\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles, Theme, ThemeProvider, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { Skeleton } from '@material-ui/lab';\nimport AppBottomNavigation from './components/layout/AppBottomNavigation';\nimport AppTopBar from './components/layout/AppTopBar';\nimport AppTopNavigation from './components/layout/AppTopNavigation';\nimport PageNotFound from './pages/PageNotFound';\nimport MuiTheme from './theme';\nimport Auth0ProviderWithHistory from './utils/auth/Auth0ProviderWithHistory';\nimport PrivateRoute from './utils/auth/PrivateRoute';\n\nconst LocationDisplay = () => {\n    const location = useLocation();\n    return <div data-testid=\"location-display\">{location.pathname}</div>;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n    main: {\n        [theme.breakpoints.down('md')]: {\n            marginTop: theme.spacing(1),\n        },\n        [theme.breakpoints.up('md')]: {\n            marginTop: 64 + theme.spacing(3), // follow fixed AppBar minHeight: 64\n        },\n        marginBottom: theme.spacing(10),\n    },\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n    },\n}));\n\nexport default function App() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchesLgScreen = useMediaQuery(theme.breakpoints.up('md'));\n\n    return (\n        <ThemeProvider theme={MuiTheme}>\n            <CssBaseline />\n            <Auth0ProviderWithHistory>\n                <div className={classes.root}>\n                    {matchesLgScreen ? <AppTopNavigation /> : <AppTopBar />}\n                    <Container component=\"main\" className={classes.main} maxWidth=\"lg\">\n                        <React.Suspense fallback={<Skeleton variant=\"rect\" height=\"100vh\" />}>\n                            <Switch>\n                                <Route exact path=\"/about\" component={React.lazy(() => import('./pages/About'))} />\n                                <PrivateRoute\n                                    exact\n                                    path=\"/user-profile\"\n                                    component={React.lazy(() => import('./pages/UserProfile'))}\n                                />\n                                <PrivateRoute\n                                    exact\n                                    path=\"/animal-list\"\n                                    component={React.lazy(() => import('./pages/Animals'))}\n                                />\n                                <PrivateRoute\n                                    exact\n                                    path=\"/animal/:id\"\n                                    component={React.lazy(() => import('./pages/AnimalDetails'))}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/search\"\n                                    component={React.lazy(() => import('./pages/PageNotImplemented'))}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/login\"\n                                    component={React.lazy(() => import('./pages/PageNotImplemented'))}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/logout\"\n                                    component={React.lazy(() => import('./pages/PageNotImplemented'))}\n                                />\n                                <Route exact path=\"/\" component={React.lazy(() => import('./pages/Home'))} />\n                                <Route component={PageNotFound} />\n                            </Switch>\n                        </React.Suspense>\n                    </Container>\n                    {!matchesLgScreen && <AppBottomNavigation />}\n                </div>\n            </Auth0ProviderWithHistory>\n\n            <LocationDisplay />\n        </ThemeProvider>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { ApolloProvider } from '@apollo/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createGraphQlClient } from './services/graphql-client';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nconst client = createGraphQlClient();\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <ApolloProvider client={client}>\n                <App />\n            </ApolloProvider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport config from '../config';\n\nexport function createGraphQlClient() {\n    return new ApolloClient({\n        uri: config.GRAPHQL_URL,\n        cache: new InMemoryCache(),\n    });\n}\n"],"sourceRoot":""}