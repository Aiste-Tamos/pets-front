{"version":3,"sources":["components/layout/SiteBottomNavigation.tsx","components/layout/SiteTopNavigation.tsx","pages/Page.tsx","pages/About.tsx","components/animal/AnimalEventList.tsx","components/layout/LayoutMultiColRow.tsx","pages/AnimalDetails.tsx","utils/animal.ts","utils/string.ts","components/animal/AnimalListItem.tsx","components/animal/AnimalsList.tsx","components/animal/AnimalsTable.tsx","components/animal/ViewSelector.tsx","components/animal/AnimalsListContainer.tsx","pages/Animals.tsx","logo.svg","components/layout/AppLogoHeader.tsx","pages/Home.tsx","pages/PageNotFound.tsx","pages/PageNotImplemented.tsx","pages/UserProfile.tsx","theme.ts","App.tsx","reportWebVitals.ts","config.ts","serviceWorkerRegistration.ts","index.tsx","services/graphql-client.ts"],"names":["useStyles","makeStyles","root","position","bottom","width","SiteBottomNavigation","React","useState","value","setValue","classes","theme","useTheme","useMediaQuery","breakpoints","down","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","component","Link","to","label","icon","ul","margin","padding","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","textAlign","toolbarMenuRow","display","flexDirection","menuItem","hasIconAndText","marginRight","ListItemLink","props","primary","renderLink","useMemo","forwardRef","itemProps","ref","ListItem","button","ListItemIcon","ListItemText","SiteTopNavigation","AppBar","color","elevation","Toolbar","Typography","variant","noWrap","List","aria-label","up","Divider","orientation","flexItem","Page","children","action","title","Box","PageHeading","Grid","container","spacing","item","xs","endAlign","marginBottom","paddingBottom","About","paragraph","createStyles","backgroundColor","fade","background","paper","avatar","secondary","contrastText","light","inline","AnimalEventList","map","index","alignItems","ListItemAvatar","Avatar","LayoutMultiColRow","colNum","Children","count","sizeSm","Math","floor","items","forEach","child","push","sm","animalName","dark","animalMeta","grey","AnimalDetails","id","useParams","src","aspectRatio","mt","mb","getAnimalAge","birthTimestamp","formatDistance","Date","charAt","toUpperCase","slice","AnimalsListItem","animal","md","lg","NavLink","alt","image_url","name","details","birth_date","pt","format","borderRadius","transition","transitions","create","easing","easeIn","duration","shortest","transform","boxShadow","paddingTop","AnimalsList","animals","AnimalsTable","history","useHistory","TableContainer","Table","table","size","TableHead","TableRow","headRow","TableCell","align","head","TableBody","hover","onClick","animalId","row","weight","AnimalsViewType","text","cursor","textDecoration","ViewSelector","ToggleButtonGroup","exclusive","e","val","ToggleButton","LIST","TABLE","GET_ANIMALS_QUERY","AnimalsListContainer","viewType","useQuery","loading","error","data","Skeleton","animation","height","length","Animals","setViewType","mobile","useEffect","justifyContent","logo","pointerEvents","AppLogoHeader","Home","PageNotFound","PageNotImplemented","UserProfile","defaultTheme","createMuiTheme","main","values","xl","overrides","MuiTypography","h1","fontSize","lineHeight","h2","h3","h4","h5","h6","MuiListItemIcon","minWidth","marginTop","LocationDisplay","location","useLocation","data-testid","pathname","minHeight","footer","App","ThemeProvider","MuiTheme","CssBaseline","Container","maxWidth","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","config","GRAPHQL_URL","process","Boolean","window","hostname","match","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ee33cfd3.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport PetsTwoToneIcon from '@material-ui/icons/PetsTwoTone';\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone';\n\nconst useStyles = makeStyles({\n    root: {\n        position: 'fixed',\n        bottom: 0,\n        width: '100%',\n    },\n});\n\nexport default function SiteBottomNavigation() {\n    const [value, setValue] = React.useState(0);\n    const classes = useStyles();\n    const theme = useTheme();\n\n    // todo - there will be a problem with active nav if route will change\n\n    return useMediaQuery(theme.breakpoints.down('xs')) ? (\n        <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n                setValue(newValue);\n            }}\n            showLabels\n            className={classes.root}\n        >\n            <BottomNavigationAction component={Link} to=\"/animal-list\" label=\"Animals\" icon={<PetsTwoToneIcon />} />\n            <BottomNavigationAction component={Link} to=\"/search\" label=\"Search\" icon={<SearchTwoToneIcon />} />\n        </BottomNavigation>\n    ) : null;\n}\n","import React from 'react';\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AccountCircleTwoToneIcon from '@material-ui/icons/AccountCircleTwoTone';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { Omit } from '@material-ui/types';\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: 'none',\n        },\n    },\n    appBar: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    toolbar: {\n        flexWrap: 'wrap',\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n        textAlign: 'left',\n    },\n    toolbarMenuRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: 0,\n    },\n    menuItem: {\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    hasIconAndText: {\n        '& .MuiListItemIcon-root': {\n            marginRight: 4,\n        },\n    },\n}));\n\ninterface ListItemLinkProps {\n    icon?: React.ReactElement;\n    primary?: string;\n    to: string;\n    className?: string;\n}\n\nfunction ListItemLink(props: ListItemLinkProps) {\n    const { icon, primary, to, className } = props;\n    const classes = useStyles();\n\n    const renderLink = React.useMemo(\n        () =>\n            React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\n                <RouterLink className={classes.menuItem} to={to} ref={ref} {...itemProps} />\n            )),\n        [to, classes]\n    );\n\n    return (\n        <li>\n            <ListItem className={className} button component={renderLink}>\n                {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n                {primary ? <ListItemText primary={primary} /> : null}\n            </ListItem>\n        </li>\n    );\n}\n\nconst isUserLoggedIn = true;\n\nexport default function SiteTopNavigation() {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <div>\n            <AppBar position=\"fixed\" color=\"default\" elevation={0} className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                        PetBook\n                    </Typography>\n                    <List component=\"nav\" className={classes.toolbarMenuRow} aria-label=\"top navigation\">\n                        {useMediaQuery(theme.breakpoints.up('sm')) ? (\n                            <>\n                                <ListItemLink to=\"/\" primary=\"Home\" />\n                                <ListItemLink to=\"/about\" primary=\"About\" />\n                                {isUserLoggedIn ? <ListItemLink to=\"/animal-list\" primary=\"Animals\" /> : null}\n                            </>\n                        ) : null}\n                        {isUserLoggedIn ? (\n                            <>\n                                <ListItemLink\n                                    to=\"/user-profile\"\n                                    primary=\"UserName\"\n                                    className={classes.hasIconAndText}\n                                    icon={<AccountCircleTwoToneIcon />}\n                                />\n                                <Divider orientation=\"vertical\" flexItem />\n                                <ListItemLink to=\"/logout\" icon={<ExitToAppTwoToneIcon />} />\n                            </>\n                        ) : (\n                            <ListItemLink\n                                to=\"/login\"\n                                primary=\"Login\"\n                                className={classes.hasIconAndText}\n                                icon={<AccountCircleTwoToneIcon />}\n                            />\n                        )}\n                    </List>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport { Box } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\ninterface PageProps {\n    children: React.ReactNode;\n    action?: React.ReactNode;\n    title?: string;\n}\n\nexport default function Page({ children, action, title }: PageProps) {\n    return (\n        <Box>\n            {title && <PageHeading title={title} action={action} />}\n            {children}\n        </Box>\n    );\n}\n\ninterface PageHeadingProps {\n    title: string;\n    action?: React.ReactNode;\n}\n\nfunction PageHeading({ title, action }: PageHeadingProps) {\n    const classes = useStyles();\n    return (\n        <Grid container spacing={2} className={classes.root}>\n            <Grid item xs={10}>\n                <Typography className={classes.title} variant=\"h3\" color=\"textSecondary\">\n                    {title}\n                </Typography>\n            </Grid>\n            {action && (\n                <Grid item xs={2} className={classes.endAlign}>\n                    {action}\n                </Grid>\n            )}\n            <Grid item xs={12}>\n                <Divider />\n            </Grid>\n        </Grid>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(2),\n    },\n    title: {\n        paddingBottom: theme.spacing(1),\n    },\n    endAlign: {\n        textAlign: 'end',\n    },\n}));\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\nimport Page from './Page';\n\nfunction About() {\n    return (\n        <Page title=\"About this project\">\n            <Typography variant=\"h3\" component=\"h1\">\n                About page\n            </Typography>\n            <Typography variant=\"body1\" paragraph>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n                ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n                fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n                deserunt mollit anim id est laborum.\n            </Typography>\n            <Typography variant=\"body1\" paragraph>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                dolore magna aliqua. Ut enim ad minim veniam, quis nostrud ex ercitation ullamco laboris nisi ut aliquip\n                ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n                fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n                deserunt mollit anim id est laborum.\n            </Typography>\n            <Typography variant=\"body1\" paragraph>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n                ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n                fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n                deserunt mollit anim id est laborum.\n            </Typography>\n            <Typography variant=\"body1\" paragraph>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n                ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n                fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n                deserunt mollit anim id est laborum.\n            </Typography>\n            <Typography variant=\"h1\" component=\"h1\">\n                Heading1\n            </Typography>\n            <Typography variant=\"h2\" component=\"h2\">\n                Heading2\n            </Typography>\n            <Typography variant=\"h3\" component=\"h3\">\n                Heading3\n            </Typography>\n            <Typography variant=\"h4\" component=\"h4\">\n                Heading4\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n                Heading5\n            </Typography>\n            <Typography variant=\"h6\" component=\"h6\">\n                Heading6\n            </Typography>\n        </Page>\n    );\n}\n\nexport default About;\n","import React from 'react';\n\nimport {\n    Avatar,\n    Divider,\n    fade,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Theme,\n    Typography,\n} from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TodayIcon from '@material-ui/icons/Today';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        item: {\n            backgroundColor: fade(theme.palette.background.paper, 0.4),\n        },\n        avatar: {\n            color: theme.palette.secondary.contrastText,\n            background: theme.palette.secondary.light,\n        },\n        inline: {\n            display: 'inline',\n        },\n    })\n);\n\nfunction AnimalEventList() {\n    const classes = useStyles();\n\n    return (\n        <List className={classes.root}>\n            {[0, 1, 2, 3].map((item: number, index: number) => {\n                return (\n                    <div key={`event-list${item}`}>\n                        {index !== 0 ? <Divider component=\"li\" /> : null}\n                        <ListItem className={classes.item} alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <Avatar className={classes.avatar}>\n                                    <TodayIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`Type / Name-${item}`}\n                                secondary={\n                                    <>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                            2021-01-02 by AuthorName\n                                        </Typography>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textSecondary\"\n                                        >\n                                            {\n                                                ' — Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor…'\n                                            }\n                                        </Typography>\n                                    </>\n                                }\n                            />\n                        </ListItem>\n                    </div>\n                );\n            })}\n        </List>\n    );\n}\n\nexport default AnimalEventList;\n","import React, { ReactNode } from 'react';\n\nimport { Grid } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n    })\n);\n\ninterface Props {\n    children: ReactNode;\n}\n\nfunction LayoutMultiColRow({ children }: Props) {\n    const classes = useStyles();\n\n    const colNum = React.Children.count(children);\n    const maxColNum = 4;\n    const sizeSm = !!Math.floor(12 / colNum); // method overload signature matching\n\n    // no render for invalid component usage\n    if (!colNum || colNum > maxColNum) {\n        return null;\n    }\n\n    const items: ReactNode[] = [];\n    React.Children.forEach(children, (child, index) => {\n        items.push(\n            <Grid key={`grid-col-${index}`} item xs={12} sm={sizeSm}>\n                {child}\n            </Grid>\n        );\n    });\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                {items}\n            </Grid>\n        </div>\n    );\n}\n\nexport default LayoutMultiColRow;\n","import Image from 'material-ui-image';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Box, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport AnimalEventList from '../components/animal/AnimalEventList';\nimport LayoutMultiColRow from '../components/layout/LayoutMultiColRow';\n\ninterface RouterParams {\n    id: string;\n}\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        animalName: {\n            color: theme.palette.primary.dark,\n        },\n        animalMeta: {\n            color: theme.palette.grey[600],\n        },\n    })\n);\n\nfunction AnimalDetails() {\n    const params: RouterParams = useParams();\n    const { id } = params;\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <LayoutMultiColRow>\n                <Image src=\"https://picsum.photos/600/338\" aspectRatio={16 / 9} />\n                <>\n                    <Box mt={1}>\n                        <Typography className={classes.animalName} variant=\"h3\" component=\"h1\">\n                            dog Scooby Doo\n                        </Typography>\n                    </Box>\n                    <Box mt={1}>\n                        <Typography className={classes.animalMeta} variant=\"body1\">\n                            Breed, gender, weight, color, birth_date\n                        </Typography>\n                    </Box>\n                    <Box mt={1}>\n                        <Typography variant=\"body1\">Referencing Animal ID:{id}</Typography>\n                    </Box>\n                </>\n            </LayoutMultiColRow>\n            <Box mt={2} mb={2}>\n                <Typography variant=\"h5\" component=\"h3\">\n                    Events\n                </Typography>\n            </Box>\n            <AnimalEventList />\n        </div>\n    );\n}\n\nexport default AnimalDetails;\n","import { formatDistance } from 'date-fns';\n\nimport { capitalizeFirstLetter } from './string';\n\nexport const getAnimalAge = (birthTimestamp: number): string =>\n    capitalizeFirstLetter(formatDistance(birthTimestamp, new Date()));\n","export const capitalizeFirstLetter = (value: string): string => value.charAt(0).toUpperCase() + value.slice(1);\n","import { format } from 'date-fns';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { fade, Theme } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Typography from '@material-ui/core/Typography';\nimport { Animal } from '../../graphql/types';\nimport { getAnimalAge } from '../../utils/animal';\n\ninterface AnimalsListItemProps {\n    animal: Animal;\n}\n\nexport default function AnimalsListItem({ animal }: AnimalsListItemProps) {\n    const classes = useStyles();\n    return (\n        <Grid item xs={12} md={6} lg={4}>\n            <ListItem className={classes.item} color=\"secondary\" component={NavLink} to={`/animal/${animal.id}`}>\n                <ListItemAvatar className={classes.avatar}>\n                    <Avatar\n                        alt=\"Animal picture\"\n                        src={animal.image_url ? animal.image_url : `https://eu.ui-avatars.com/api/?name=${animal.name}`}\n                    />\n                </ListItemAvatar>\n                <ListItemText>\n                    <Box>\n                        <Typography variant=\"subtitle1\" display=\"inline\" color=\"textPrimary\">\n                            {`Dog ${animal.name}`}\n                        </Typography>\n                        <Typography variant=\"body1\" color=\"textSecondary\" display=\"inline\">\n                            {` - ${getAnimalAge(+animal.details!.birth_date!)} old`}\n                        </Typography>\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            check-in date\n                        </Typography>\n                    </Box>\n                    <Box pt={1}>\n                        <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\n                            {`1.6kg black male Puddle, born in ${format(\n                                new Date(+animal.details!.birth_date!),\n                                'yyyy-MM-dd'\n                            )}`}\n                        </Typography>\n                    </Box>\n                </ListItemText>\n            </ListItem>\n        </Grid>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    item: {\n        alignItems: 'flex-start',\n        backgroundColor: fade(theme.palette.background.paper, 0.4),\n        borderRadius: 4,\n        transition: theme.transitions.create(['box-shadow', 'transform'], {\n            easing: theme.transitions.easing.easeIn,\n            duration: theme.transitions.duration.shortest,\n        }),\n        '&:hover': {\n            transform: 'translateY(-2px)',\n            boxShadow: '0 4px 8px rgba(0, 0, 0, .2)',\n        },\n    },\n    avatar: {\n        paddingTop: theme.spacing(1),\n    },\n}));\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport { Animal } from '../../graphql/types';\nimport AnimalsListItem from './AnimalListItem';\n\ninterface AnimalsListProps {\n    animals: Animal[];\n}\n\nexport default function AnimalsList({ animals }: AnimalsListProps) {\n    return (\n        <Grid container component=\"ul\" spacing={2}>\n            {animals.map(animal => (\n                <AnimalsListItem key={animal.id} animal={animal} />\n            ))}\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { fade, TableContainer, Theme } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Animal } from '../../graphql/types';\nimport { getAnimalAge } from '../../utils/animal';\n\ninterface AnimalsTableProps {\n    animals: Animal[];\n}\n\nexport default function AnimalsTable({ animals }: AnimalsTableProps) {\n    const history = useHistory();\n    const classes = useStyles();\n\n    const onRowClick = (animalId: number) => {\n        history.push(`/animal/${animalId}`);\n    };\n\n    return (\n        <TableContainer>\n            <Table className={classes.table} size=\"small\" aria-label=\"animals\">\n                <TableHead>\n                    <TableRow className={classes.headRow}>\n                        <TableCell align=\"center\" className={classes.head} />\n                        <TableCell align=\"center\" className={classes.head}>\n                            Specie\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Name\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Breed\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Weight, kg\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Age\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Checked in\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {animals.map(animal => (\n                        <TableRow key={animal.id} hover onClick={() => onRowClick(animal.id)} className={classes.row}>\n                            <TableCell align=\"center\">\n                                <Avatar\n                                    alt=\"Animal picture\"\n                                    src={\n                                        animal.image_url\n                                            ? animal.image_url\n                                            : `https://eu.ui-avatars.com/api/?name=${animal.name}`\n                                    }\n                                />\n                            </TableCell>\n                            <TableCell align=\"center\">Dog</TableCell>\n                            <TableCell align=\"center\">{animal.name}</TableCell>\n                            <TableCell align=\"center\">Puddle</TableCell>\n                            <TableCell align=\"center\">{animal.details?.weight}</TableCell>\n                            <TableCell align=\"center\">{getAnimalAge(+animal.details!.birth_date!)}</TableCell>\n                            <TableCell align=\"center\">check-in date</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    headRow: {\n        backgroundColor: fade(theme.palette.primary.dark, 0.75),\n    },\n    head: {\n        color: theme.palette.text.secondary,\n    },\n    table: {\n        width: '100%',\n        backgroundColor: fade(theme.palette.background.paper, 0.4),\n    },\n    row: {\n        cursor: 'pointer',\n        textDecoration: 'none',\n    },\n}));\n","import React from 'react';\n\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport { ToggleButtonGroup } from '@material-ui/lab';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\n\ninterface ViewSelectorProps {\n    value: AnimalsViewType;\n    onChange: (type: AnimalsViewType) => void;\n}\n\nexport default function ViewSelector({ value, onChange }: ViewSelectorProps) {\n    return (\n        <ToggleButtonGroup\n            size=\"small\"\n            exclusive\n            value={value}\n            onChange={(e, val) => onChange(val as AnimalsViewType)}\n            aria-label=\"view selector\"\n        >\n            <ToggleButton value={AnimalsViewType.LIST} aria-label={AnimalsViewType.LIST}>\n                <ViewModuleIcon />\n            </ToggleButton>\n            <ToggleButton value={AnimalsViewType.TABLE} aria-label={AnimalsViewType.TABLE}>\n                <ReorderIcon />\n            </ToggleButton>\n        </ToggleButtonGroup>\n    );\n}\n\nexport enum AnimalsViewType {\n    LIST = 'list',\n    TABLE = 'table',\n}\n","import { loader } from 'graphql.macro';\nimport React from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Animal } from '../../graphql/types';\nimport AnimalsList from './AnimalsList';\nimport AnimalsTable from './AnimalsTable';\nimport { AnimalsViewType } from './ViewSelector';\n\nconst GET_ANIMALS_QUERY = loader('../../graphql/queries/animal-list.graphql');\n\ninterface Response {\n    animals: Animal[];\n}\n\ninterface AnimalsListContainerProps {\n    viewType: AnimalsViewType;\n}\n\nexport default function AnimalsListContainer({ viewType }: AnimalsListContainerProps) {\n    const { loading, error, data } = useQuery<Response>(GET_ANIMALS_QUERY);\n    if (loading) {\n        return <Skeleton animation=\"wave\" height=\"70vh\" />;\n    }\n\n    if (error) {\n        // TODO: replace with proper UI elements\n        return <p>Error!</p>;\n    }\n\n    if (!data?.animals.length) {\n        // TODO: replace with proper UI elements\n        return <p>No data</p>;\n    }\n\n    if (viewType === AnimalsViewType.TABLE) {\n        return <AnimalsTable animals={data.animals} />;\n    }\n\n    return <AnimalsList animals={data.animals} />;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AnimalsListContainer from '../components/animal/AnimalsListContainer';\nimport ViewSelector, { AnimalsViewType } from '../components/animal/ViewSelector';\nimport Page from './Page';\n\nfunction Animals() {\n    const theme = useTheme();\n    // TODO: extract selectedViewType to context or localStore\n    const [viewType, setViewType] = useState<AnimalsViewType>(AnimalsViewType.LIST);\n    const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n    useEffect(() => {\n        if (mobile && viewType === AnimalsViewType.TABLE) {\n            setViewType(AnimalsViewType.LIST);\n        }\n    }, [mobile, viewType]);\n\n    const handleViewChange = () => {\n        setViewType(viewType === AnimalsViewType.TABLE ? AnimalsViewType.LIST : AnimalsViewType.TABLE);\n    };\n\n    return (\n        <Page title=\"Animals List\" action={!mobile && <ViewSelector value={viewType} onChange={handleViewChange} />}>\n            <AnimalsListContainer viewType={viewType} />\n        </Page>\n    );\n}\n\nexport default Animals;\n","export default __webpack_public_path__ + \"static/media/logo.22754045.svg\";","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport logo from '../../logo.svg';\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    logo: {\n        height: '40vmin',\n        pointerEvents: 'none',\n    },\n});\n\nfunction AppLogoHeader() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <img src={logo} className={classes.logo} alt=\"logo\" />\n            <Typography variant=\"h3\" component=\"h1\" align=\"center\">\n                Pets information system\n            </Typography>\n        </div>\n    );\n}\n\nexport default AppLogoHeader;\n","import React from 'react';\n\nimport AppLogoHeader from '../components/layout/AppLogoHeader';\n\nfunction Home() {\n    return (\n        <div className=\"Home-page\">\n            <AppLogoHeader />\n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Typography } from '@material-ui/core';\n\nfunction PageNotFound() {\n    return (\n        <div className=\"NotFound-page\">\n            <Typography variant=\"h3\" component=\"h1\">\n                Page Not Found\n            </Typography>\n            <Typography variant=\"body1\">\n                Try navigating to <Link to=\"/\">homepage</Link>\n            </Typography>\n        </div>\n    );\n}\n\nexport default PageNotFound;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Typography } from '@material-ui/core';\n\nfunction PageNotImplemented() {\n    return (\n        <div className=\"NotFound-page\">\n            <Typography variant=\"h3\" component=\"h1\">\n                Page is not implemented yet\n            </Typography>\n            <Typography variant=\"body1\">\n                Try navigating to <Link to=\"/\">homepage</Link>\n            </Typography>\n        </div>\n    );\n}\n\nexport default PageNotImplemented;\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\n\nfunction UserProfile() {\n    return (\n        <div className=\"UserProfile-page\">\n            <Typography variant=\"h3\" component=\"h1\">\n                UserProfile page\n            </Typography>\n            <Typography variant=\"body1\">User and Organization details</Typography>\n        </div>\n    );\n}\n\nexport default UserProfile;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst defaultTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#e8cdb8',\n        },\n        secondary: {\n            light: '#417565',\n            main: '#13493b',\n            dark: '#002115',\n        },\n    },\n    breakpoints: {\n        values: {\n            xs: 0,\n            sm: 450,\n            md: 768,\n            lg: 1280,\n            xl: 1920,\n        },\n    },\n});\nconst { breakpoints } = defaultTheme;\n\nconst theme = {\n    ...defaultTheme,\n    overrides: {\n        MuiTypography: {\n            h1: {\n                fontSize: '3rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '2.6rem',\n                },\n            },\n            h2: {\n                fontSize: '2.6rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '2.2rem',\n                },\n            },\n            h3: {\n                fontSize: '2.2rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.8rem',\n                },\n            },\n            h4: {\n                fontSize: '1.8rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.6rem',\n                },\n            },\n            h5: {\n                fontSize: '1.8rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.6rem',\n                },\n            },\n            h6: {\n                fontSize: '1.6rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.4rem',\n                },\n            },\n        },\n        MuiListItemIcon: {\n            root: {\n                minWidth: 'auto',\n                marginTop: 4,\n                marginBottom: 4,\n            },\n        },\n    },\n};\n\nexport default theme;\n","import './App.css';\nimport React from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\n\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport SiteBottomNavigation from './components/layout/SiteBottomNavigation';\nimport SiteTopNavigation from './components/layout/SiteTopNavigation';\nimport About from './pages/About';\nimport AnimalDetails from './pages/AnimalDetails';\nimport Animals from './pages/Animals';\nimport Home from './pages/Home';\nimport PageNotFound from './pages/PageNotFound';\nimport PageNotImplemented from './pages/PageNotImplemented';\nimport UserProfile from './pages/UserProfile';\nimport MuiTheme from './theme';\n\nconst LocationDisplay = () => {\n    const location = useLocation();\n    return <div data-testid=\"location-display\">{location.pathname}</div>;\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        backgroundColor: '#e8cdb8',\n    },\n    main: {\n        [theme.breakpoints.down('sm')]: {\n            marginTop: 56 + theme.spacing(2), // follow AppBar minHeight: 56\n        },\n        [theme.breakpoints.up('sm')]: {\n            marginTop: 64 + theme.spacing(3), // follow AppBar minHeight: 64\n        },\n        marginBottom: theme.spacing(10),\n    },\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n    },\n}));\n\nexport default function App() {\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={MuiTheme}>\n            <CssBaseline />\n            <div className={classes.root}>\n                <SiteTopNavigation />\n                <Container component=\"main\" className={classes.main} maxWidth=\"lg\">\n                    <Switch>\n                        <Route exact path=\"/about\" component={About} />\n                        <Route exact path=\"/user-profile\" component={UserProfile} />\n                        <Route exact path=\"/animal-list\" component={Animals} />\n                        <Route exact path=\"/animal/:id\" component={AnimalDetails} />\n                        <Route exact path=\"/search\" component={PageNotImplemented} />\n                        <Route exact path=\"/login\" component={PageNotImplemented} />\n                        <Route exact path=\"/logout\" component={PageNotImplemented} />\n                        <Route exact path=\"/\" component={Home} />\n                        <Route component={PageNotFound} />\n                    </Switch>\n                </Container>\n                <SiteBottomNavigation />\n            </div>\n            <LocationDisplay />\n        </ThemeProvider>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","interface Config {\n    GRAPHQL_URL: string;\n}\n\nconst config: Config = {\n    GRAPHQL_URL: process.env.REACT_APP_GRAPHQL_URL!,\n};\n\nexport default config;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { ApolloProvider } from '@apollo/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createGraphQlClient } from './services/graphql-client';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nconst client = createGraphQlClient();\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <ApolloProvider client={client}>\n                <App />\n            </ApolloProvider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport config from '../config';\n\nexport function createGraphQlClient() {\n    return new ApolloClient({\n        uri: config.GRAPHQL_URL,\n        cache: new InMemoryCache(),\n    });\n}\n"],"sourceRoot":""}