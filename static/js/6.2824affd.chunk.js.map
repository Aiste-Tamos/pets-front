{"version":3,"sources":["components/animal/AnimalEventList.tsx","components/layout/LayoutMultiColRow.tsx","pages/AnimalDetails.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","width","item","backgroundColor","fade","palette","background","paper","avatar","color","secondary","contrastText","light","inline","display","AnimalEventList","classes","List","className","map","index","Divider","component","ListItem","alignItems","ListItemAvatar","Avatar","ListItemText","primary","Typography","variant","flexGrow","LayoutMultiColRow","children","colNum","React","Children","count","sizeSm","Math","floor","items","forEach","child","push","Grid","xs","sm","container","spacing","animalName","dark","animalMeta","grey","AnimalDetails","id","useParams","src","aspectRatio","Box","mt","mb"],"mappings":"+RAgBMA,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFC,MAAO,QAEXC,KAAM,CACFC,gBAAiBC,YAAKN,EAAMO,QAAQC,WAAWC,MAAO,KAE1DC,OAAQ,CACJC,MAAOX,EAAMO,QAAQK,UAAUC,aAC/BL,WAAYR,EAAMO,QAAQK,UAAUE,OAExCC,OAAQ,CACJC,QAAS,eAqDNC,MAhDf,WACI,IAAMC,EAAUpB,IAEhB,OACI,cAACqB,EAAA,EAAD,CAAMC,UAAWF,EAAQhB,KAAzB,SACK,CAAC,EAAG,EAAG,EAAG,GAAGmB,KAAI,SAACjB,EAAckB,GAC7B,OACI,gCACe,IAAVA,EAAc,cAACC,EAAA,EAAD,CAASC,UAAU,OAAU,KAC5C,eAACC,EAAA,EAAD,CAAUL,UAAWF,EAAQd,KAAMsB,WAAW,aAA9C,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQR,UAAWF,EAAQR,OAA3B,SACI,cAAC,IAAD,QAGR,cAACmB,EAAA,EAAD,CACIC,QAAO,sBAAiB1B,GACxBQ,UACI,qCACI,cAACmB,EAAA,EAAD,CACIP,UAAU,OACVQ,QAAQ,QACRZ,UAAWF,EAAQH,OACnBJ,MAAM,cAJV,sCAQA,cAACoB,EAAA,EAAD,CACIP,UAAU,OACVQ,QAAQ,QACRZ,UAAWF,EAAQH,OACnBJ,MAAM,gBAJV,SAOQ,2GA3B5B,oBAAuBP,U,QCpCrCN,EAAYC,aAAW,kBACzBE,YAAa,CACTC,KAAM,CACF+B,SAAU,QAuCPC,MA9Bf,YAAiD,IAApBC,EAAmB,EAAnBA,SACnBjB,EAAUpB,IAEVsC,EAASC,IAAMC,SAASC,MAAMJ,GAE9BK,IAAWC,KAAKC,MAAM,GAAKN,GAGjC,IAAKA,GAAUA,EAJG,EAKd,OAAO,KAGX,IAAMO,EAAqB,GAS3B,OARAN,IAAMC,SAASM,QAAQT,GAAU,SAACU,EAAOvB,GACrCqB,EAAMG,KACF,cAACC,EAAA,EAAD,CAAgC3C,MAAI,EAAC4C,GAAI,GAAIC,GAAIT,EAAjD,SACKK,GADL,mBAAuBvB,QAO3B,qBAAKF,UAAWF,EAAQhB,KAAxB,SACI,cAAC6C,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,EAAzB,SACKR,OC5BX7C,EAAYC,aAAW,SAAAC,GAAK,OAC9BC,YAAa,CACTC,KAAM,CACF+B,SAAU,GAEdmB,WAAY,CACRzC,MAAOX,EAAMO,QAAQuB,QAAQuB,MAEjCC,WAAY,CACR3C,MAAOX,EAAMO,QAAQgD,KAAK,WAwCvBC,UAnCf,WACI,IACQC,EADqBC,cACrBD,GACFvC,EAAUpB,IAEhB,OACI,sBAAKsB,UAAWF,EAAQhB,KAAxB,UACI,eAAC,EAAD,WACI,cAAC,IAAD,CAAOyD,IAAI,gCAAgCC,YAAa,GAAK,IAC7D,qCACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC/B,EAAA,EAAD,CAAYX,UAAWF,EAAQkC,WAAYpB,QAAQ,KAAKR,UAAU,KAAlE,8BAIJ,cAACqC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC/B,EAAA,EAAD,CAAYX,UAAWF,EAAQoC,WAAYtB,QAAQ,QAAnD,wDAIJ,cAAC6B,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAAC/B,EAAA,EAAD,CAAYC,QAAQ,QAApB,mCAAmDyB,aAI/D,cAACI,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACI,cAAChC,EAAA,EAAD,CAAYC,QAAQ,KAAKR,UAAU,KAAnC,sBAIJ,cAAC,EAAD","file":"static/js/6.2824affd.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n    Avatar,\n    Divider,\n    fade,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Theme,\n    Typography,\n} from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TodayIcon from '@material-ui/icons/Today';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        item: {\n            backgroundColor: fade(theme.palette.background.paper, 0.4),\n        },\n        avatar: {\n            color: theme.palette.secondary.contrastText,\n            background: theme.palette.secondary.light,\n        },\n        inline: {\n            display: 'inline',\n        },\n    })\n);\n\nfunction AnimalEventList() {\n    const classes = useStyles();\n\n    return (\n        <List className={classes.root}>\n            {[0, 1, 2, 3].map((item: number, index: number) => {\n                return (\n                    <div key={`event-list${item}`}>\n                        {index !== 0 ? <Divider component=\"li\" /> : null}\n                        <ListItem className={classes.item} alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <Avatar className={classes.avatar}>\n                                    <TodayIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`Type / Name-${item}`}\n                                secondary={\n                                    <>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                            2021-01-02 by AuthorName\n                                        </Typography>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textSecondary\"\n                                        >\n                                            {\n                                                ' — Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor…'\n                                            }\n                                        </Typography>\n                                    </>\n                                }\n                            />\n                        </ListItem>\n                    </div>\n                );\n            })}\n        </List>\n    );\n}\n\nexport default AnimalEventList;\n","import React, { ReactNode } from 'react';\n\nimport { Grid } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n    })\n);\n\ninterface Props {\n    children: ReactNode;\n}\n\nfunction LayoutMultiColRow({ children }: Props) {\n    const classes = useStyles();\n\n    const colNum = React.Children.count(children);\n    const maxColNum = 4;\n    const sizeSm = !!Math.floor(12 / colNum); // method overload signature matching\n\n    // no render for invalid component usage\n    if (!colNum || colNum > maxColNum) {\n        return null;\n    }\n\n    const items: ReactNode[] = [];\n    React.Children.forEach(children, (child, index) => {\n        items.push(\n            <Grid key={`grid-col-${index}`} item xs={12} sm={sizeSm}>\n                {child}\n            </Grid>\n        );\n    });\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                {items}\n            </Grid>\n        </div>\n    );\n}\n\nexport default LayoutMultiColRow;\n","import Image from 'material-ui-image';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Box, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport AnimalEventList from '../components/animal/AnimalEventList';\nimport LayoutMultiColRow from '../components/layout/LayoutMultiColRow';\n\ninterface RouterParams {\n    id: string;\n}\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        animalName: {\n            color: theme.palette.primary.dark,\n        },\n        animalMeta: {\n            color: theme.palette.grey[600],\n        },\n    })\n);\n\nfunction AnimalDetails() {\n    const params: RouterParams = useParams();\n    const { id } = params;\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <LayoutMultiColRow>\n                <Image src=\"https://picsum.photos/600/338\" aspectRatio={16 / 9} />\n                <>\n                    <Box mt={1}>\n                        <Typography className={classes.animalName} variant=\"h3\" component=\"h1\">\n                            dog Scooby Doo\n                        </Typography>\n                    </Box>\n                    <Box mt={1}>\n                        <Typography className={classes.animalMeta} variant=\"body1\">\n                            Breed, gender, weight, color, birth_date\n                        </Typography>\n                    </Box>\n                    <Box mt={1}>\n                        <Typography variant=\"body1\">Referencing Animal ID:{id}</Typography>\n                    </Box>\n                </>\n            </LayoutMultiColRow>\n            <Box mt={2} mb={2}>\n                <Typography variant=\"h5\" component=\"h3\">\n                    Events\n                </Typography>\n            </Box>\n            <AnimalEventList />\n        </div>\n    );\n}\n\nexport default AnimalDetails;\n"],"sourceRoot":""}