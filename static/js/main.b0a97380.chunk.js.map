{"version":3,"sources":["pages/Page.tsx","hooks/useMobile.tsx","navigation.ts","components/layout/AppBottomNavigation.tsx","components/layout/TopAuthNav.tsx","components/layout/AppTopBar.tsx","components/layout/AppTopNavigation.tsx","pages/PageNotFound.tsx","theme.ts","utils/auth/PrivateRoute.tsx","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","utils/auth/Auth0ProviderWithHistory.tsx","utils/AuthorizedApolloProvider.tsx","index.tsx","config.ts"],"names":["Page","title","topSection","children","displayTitleOnMobile","classes","useStyles","mobile","theme","useTheme","useMediaQuery","breakpoints","down","useMobile","Container","component","className","root","maxWidth","Grid","container","spacing","item","xs","PageTitle","Box","mb","Typography","variant","color","Divider","makeStyles","marginTop","up","heading","marginBottom","endAlign","textAlign","navigation","authRequired","to","pageTitle","createStyles","appBar","top","bottom","backgroundColor","palette","primary","light","drawerHeader","display","alignItems","padding","mixins","toolbar","justifyContent","fabButton","position","zIndex","right","show","transform","transition","hide","HideOnScroll","props","trigger","useScrollTrigger","Slide","appear","direction","in","AppBottomNavigation","history","useHistory","location","useLocation","React","useState","open","setDrawerOpen","isAuthenticated","useAuth0","handleDrawerClose","AppBar","Toolbar","IconButton","edge","onClick","aria-label","Fab","Drawer","anchor","onClose","role","List","filter","map","ListItem","button","selected","pathTo","pathname","event","push","handleNavListItemClick","ListItemIcon","ListItemText","TopAuthNav","user","loginWithRedirect","logout","anchorEl","setAnchorEl","Boolean","Button","aria-controls","aria-haspopup","currentTarget","startIcon","name","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","returnTo","window","origin","appbar","flexGrow","AppTopBar","elevation","pages","length","link","margin","fontWeight","textTransform","text","secondary","AppTopNavigation","Link","NavLink","PageNotFound","defaultTheme","createMuiTheme","main","dark","values","sm","md","lg","xl","overrides","MuiTypography","h1","fontSize","lineHeight","h2","h3","h4","h5","h6","MuiListItemIcon","minWidth","MuiUseMediaQuery","noSsr","PrivateRoute","LocationDisplay","data-testid","flexDirection","minHeight","footer","App","matchesLgScreen","ThemeProvider","MuiTheme","CssBaseline","Suspense","fallback","Skeleton","height","exact","path","lazy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","hostname","match","Auth0ProviderWithHistory","domain","config","AUTH0_DOMAIN","clientId","AUTH0_CLIENT_ID","redirectUri","audience","AUTH0_AUDIENCE_URL","onRedirectCallback","appState","AuthorizedApolloProvider","getAccessTokenSilently","httpLink","createHttpLink","uri","GRAPHQL_URL","authLink","setContext","a","token","headers","Authorization","apolloClient","ApolloClient","concat","cache","InMemoryCache","connectToDevTools","client","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","process","PUBLIC_URL"],"mappings":"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","file":"static/js/main.b0a97380.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\n\nimport { Box } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport useMobile from '../hooks/useMobile';\n\ninterface PageProps {\n    title?: string | ReactNode;\n    topSection?: ReactNode;\n    // Content\n    children: ReactNode | ReactNode[];\n    displayTitleOnMobile?: boolean;\n}\n\nexport default function Page({ title, topSection, children, displayTitleOnMobile }: PageProps) {\n    const classes = useStyles();\n    const mobile = useMobile();\n\n    return (\n        <Container component=\"main\" className={classes.root} maxWidth=\"lg\">\n            <Grid container spacing={4}>\n                {(!mobile || displayTitleOnMobile) && (\n                    <Grid item xs={12}>\n                        {title && <PageTitle title={title} />}\n                    </Grid>\n                )}\n                {topSection && (\n                    <Grid item xs={12}>\n                        {topSection}\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    {children}\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\n\nfunction PageTitle({ title }: { title: string | ReactNode }) {\n    if (typeof title !== 'string') {\n        // Custom title\n        return <>title</>;\n    }\n\n    return (\n        <>\n            <Box mb={1}>\n                <Typography variant=\"h3\" component=\"h1\" color=\"textSecondary\">\n                    {title}\n                </Typography>\n            </Box>\n            <Divider />\n        </>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.down('md')]: {\n            marginTop: theme.spacing(1),\n        },\n        [theme.breakpoints.up('md')]: {\n            marginTop: 64 + theme.spacing(3), // follow fixed AppBar minHeight: 64\n        },\n        marginBottom: theme.spacing(10),\n    },\n    heading: {\n        marginBottom: theme.spacing(2),\n    },\n    endAlign: {\n        textAlign: 'end',\n    },\n}));\n","import { useMediaQuery } from '@material-ui/core';\nimport useTheme from '@material-ui/core/styles/useTheme';\n\nexport default function useMobile() {\n    const theme = useTheme();\n    return useMediaQuery(theme.breakpoints.down('sm'));\n}\n","interface NavigationItem {\n    authRequired: boolean;\n    title: string;\n    to: string;\n    pageTitle: string;\n}\n\nconst navigation: Array<NavigationItem> = [\n    { authRequired: false, title: 'Home', to: '/', pageTitle: 'Welcome' },\n    { authRequired: false, title: 'About', to: '/about', pageTitle: 'About this project' },\n    { authRequired: true, title: 'Animals', to: '/animal-list', pageTitle: 'Animal list' },\n    { authRequired: true, title: 'Favourites', to: '/favourites', pageTitle: 'Favourites' },\n    { authRequired: true, title: 'Reports', to: '/reports', pageTitle: 'Reports' },\n];\n\nexport { navigation };\nexport type { NavigationItem };\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { useAuth0 } from '@auth0/auth0-react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Slide from '@material-ui/core/Slide';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport AddIcon from '@material-ui/icons/Add';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { navigation, NavigationItem } from '../../navigation';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            top: 'auto',\n            bottom: 0,\n            backgroundColor: theme.palette.primary.light,\n        },\n        drawerHeader: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: theme.spacing(0, 3),\n            // necessary for height alignment with app bar\n            ...theme.mixins.toolbar,\n            justifyContent: 'space-between',\n        },\n        fabButton: {\n            position: 'absolute',\n            zIndex: 1,\n            top: -30,\n            right: theme.spacing(3),\n        },\n        show: {\n            transform: 'translateY(0)',\n            transition: 'transform .5s',\n        },\n        hide: {\n            transform: 'translateY(-110%)',\n            transition: 'transform .5s',\n        },\n    })\n);\n\ninterface Props {\n    children: React.ReactElement;\n}\n\nfunction HideOnScroll(props: Props) {\n    const { children } = props;\n    const trigger = useScrollTrigger();\n\n    return (\n        <Slide appear={false} direction=\"up\" in={!trigger}>\n            {children}\n        </Slide>\n    );\n}\n\nexport default function AppBottomNavigation() {\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n    const [open, setDrawerOpen] = React.useState(false);\n    const { isAuthenticated } = useAuth0();\n\n    const handleDrawerOpen = () => {\n        setDrawerOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setDrawerOpen(false);\n    };\n\n    const handleNavListItemClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>, pathTo: string) => {\n        history.push(pathTo);\n        setDrawerOpen(false);\n    };\n\n    const linkToCurrentPage = (pathTo: string) => {\n        return location.pathname === pathTo;\n    };\n\n    const navList = () => (\n        <div role=\"presentation\">\n            <div className={classes.drawerHeader}>\n                <Typography variant=\"h6\">PetBook</Typography>\n                <IconButton edge=\"end\" onClick={handleDrawerClose}>\n                    <CloseIcon />\n                </IconButton>\n            </div>\n            <Divider />\n            <List>\n                {navigation\n                    .filter((item: NavigationItem) => {\n                        return item.authRequired ? isAuthenticated : true;\n                    })\n                    .map((item: NavigationItem) => (\n                        <ListItem\n                            button\n                            key={item.title}\n                            selected={linkToCurrentPage(item.to)}\n                            onClick={event => handleNavListItemClick(event, item.to)}\n                        >\n                            <ListItemIcon>\n                                <ChevronRightIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={item.title} />\n                        </ListItem>\n                    ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <HideOnScroll>\n            <AppBar className={classes.appBar} position=\"fixed\" color=\"default\">\n                <Toolbar>\n                    <IconButton edge=\"start\" onClick={handleDrawerOpen} color=\"inherit\" aria-label=\"open drawer\">\n                        <MenuIcon />\n                    </IconButton>\n                    {/* FAB element should be rendered from the page context */}\n                    {/* FAB should not be a part of this element and scroll should not affect it  */}\n                    <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton}>\n                        <AddIcon />\n                    </Fab>\n                </Toolbar>\n                <Drawer anchor=\"bottom\" open={open} onClose={handleDrawerClose}>\n                    {navList()}\n                </Drawer>\n            </AppBar>\n        </HideOnScroll>\n    );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AccountCircleTwoToneIcon from '@material-ui/icons/AccountCircleTwoTone';\n\nexport default function TopAuthNav() {\n    const { isAuthenticated, user, loginWithRedirect, logout } = useAuth0();\n    const history = useHistory();\n\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleLinkProfile = () => {\n        history.push('/user-profile');\n    };\n\n    return (\n        <div>\n            {isAuthenticated ? (\n                <>\n                    <Button\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        aria-haspopup=\"true\"\n                        onClick={handleMenu}\n                        color=\"inherit\"\n                        startIcon={<AccountCircleTwoToneIcon />}\n                    >\n                        {user.name}\n                    </Button>\n                    <Menu\n                        id=\"menu-appbar\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        keepMounted\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={handleClose}\n                    >\n                        <MenuItem onClick={handleLinkProfile}>Profile</MenuItem>\n                        <MenuItem\n                            onClick={() =>\n                                logout({\n                                    returnTo: window.location.origin,\n                                })\n                            }\n                        >\n                            Logout\n                        </MenuItem>\n                    </Menu>\n                </>\n            ) : (\n                <IconButton aria-label=\"login\" edge=\"end\" onClick={() => loginWithRedirect()} color=\"inherit\">\n                    <AccountCircleTwoToneIcon />\n                </IconButton>\n            )}\n        </div>\n    );\n}\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { navigation, NavigationItem } from '../../navigation';\nimport TopAuthNav from './TopAuthNav';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        appbar: {\n            backgroundColor: 'transparent',\n        },\n        toolbar: {\n            justifyContent: 'space-between',\n        },\n        title: {\n            flexGrow: 1,\n        },\n    })\n);\n\nexport default function AppTopBar() {\n    const classes = useStyles();\n    const location = useLocation();\n\n    const pageTitle = () => {\n        const pages: Array<NavigationItem> = navigation.filter((item: NavigationItem) => item.to === location.pathname);\n        if (pages.length === 1) {\n            return pages[0].pageTitle;\n        }\n        return '';\n    };\n\n    return (\n        <AppBar className={classes.appbar} position=\"static\" color=\"default\" elevation={0}>\n            <Toolbar className={classes.toolbar}>\n                <Typography variant=\"h6\" className={classes.title}>\n                    {pageTitle()}\n                </Typography>\n                <TopAuthNav />\n            </Toolbar>\n        </AppBar>\n    );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { useAuth0 } from '@auth0/auth0-react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Link from '@material-ui/core/Link';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { navigation, NavigationItem } from '../../navigation';\nimport TopAuthNav from './TopAuthNav';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            backgroundColor: theme.palette.primary.light,\n        },\n        title: {\n            flexGrow: 1,\n            textAlign: 'left',\n        },\n        link: {\n            margin: theme.spacing(1, 1.5),\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            color: theme.palette.text.secondary,\n        },\n        // todo: NavLink active class is not working\n    })\n);\n\nexport default function AppTopNavigation() {\n    const classes = useStyles();\n    const { isAuthenticated } = useAuth0();\n\n    return (\n        <AppBar className={classes.appBar} position=\"fixed\" color=\"default\">\n            <Toolbar>\n                <Typography variant=\"h6\" className={classes.title}>\n                    PetBook\n                </Typography>\n                {navigation\n                    .filter((item: NavigationItem) => {\n                        return item.authRequired ? isAuthenticated : true;\n                    })\n                    .map((item: NavigationItem) => (\n                        <Link component={NavLink} className={classes.link} key={item.title} to={item.to}>\n                            {item.title}\n                        </Link>\n                    ))}\n                <TopAuthNav />\n            </Toolbar>\n        </AppBar>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Typography } from '@material-ui/core';\nimport Page from './Page';\n\nfunction PageNotFound() {\n    return (\n        <Page>\n            <Typography variant=\"h3\" component=\"h1\">\n                Page Not Found\n            </Typography>\n            <Typography variant=\"body1\">\n                Try navigating to <Link to=\"/\">homepage</Link>\n            </Typography>\n        </Page>\n    );\n}\n\nexport default PageNotFound;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeOptions } from '@material-ui/core/styles/createMuiTheme';\n\nconst defaultTheme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#e8cdb8',\n            main: '#875e3b',\n            dark: '#4e2c1a',\n        },\n        secondary: {\n            light: '#417565',\n            main: '#13493b',\n            dark: '#002115',\n        },\n    },\n    breakpoints: {\n        values: {\n            xs: 0,\n            sm: 450,\n            md: 768,\n            lg: 1280,\n            xl: 1920,\n        },\n    },\n});\nconst { breakpoints } = defaultTheme;\n\nconst theme: ThemeOptions = {\n    ...defaultTheme,\n    overrides: {\n        MuiTypography: {\n            h1: {\n                fontSize: '3rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '2.6rem',\n                },\n            },\n            h2: {\n                fontSize: '2.6rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '2.2rem',\n                },\n            },\n            h3: {\n                fontSize: '2.2rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.8rem',\n                },\n            },\n            h4: {\n                fontSize: '1.8rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.6rem',\n                },\n            },\n            h5: {\n                fontSize: '1.8rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.6rem',\n                },\n            },\n            h6: {\n                fontSize: '1.6rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.4rem',\n                },\n            },\n        },\n        MuiListItemIcon: {\n            root: {\n                minWidth: 'auto',\n                marginTop: 4,\n                marginBottom: 4,\n            },\n        },\n    },\n    props: {\n        MuiUseMediaQuery: {\n            noSsr: true,\n        },\n    },\n};\n\nexport default theme;\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\n\nimport { useAuth0 } from '@auth0/auth0-react';\n\nexport default function PrivateRoute(props: RouteProps) {\n    const { isAuthenticated } = useAuth0();\n\n    return isAuthenticated ? <Route {...props} /> : <Redirect to=\"/\" />;\n}\n","import './App.css';\nimport React from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles, Theme, ThemeProvider, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { Skeleton } from '@material-ui/lab';\nimport AppBottomNavigation from './components/layout/AppBottomNavigation';\nimport AppTopBar from './components/layout/AppTopBar';\nimport AppTopNavigation from './components/layout/AppTopNavigation';\nimport PageNotFound from './pages/PageNotFound';\nimport MuiTheme from './theme';\nimport PrivateRoute from './utils/auth/PrivateRoute';\n\nconst LocationDisplay = () => {\n    const location = useLocation();\n    return <div data-testid=\"location-display\">{location.pathname}</div>;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n    },\n}));\n\nexport default function App() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchesLgScreen = useMediaQuery(theme.breakpoints.up('md'));\n\n    return (\n        <ThemeProvider theme={MuiTheme}>\n            <CssBaseline />\n            <div className={classes.root}>\n                {matchesLgScreen ? <AppTopNavigation /> : <AppTopBar />}\n                <React.Suspense fallback={<Skeleton variant=\"rect\" height=\"100vh\" />}>\n                    <Switch>\n                        <Route exact path=\"/about\" component={React.lazy(() => import('./pages/About'))} />\n                        <PrivateRoute\n                            exact\n                            path=\"/user-profile\"\n                            component={React.lazy(() => import('./pages/UserProfile'))}\n                        />\n                        <PrivateRoute\n                            exact\n                            path=\"/animal-list\"\n                            component={React.lazy(() => import('./pages/AnimalsPage'))}\n                        />\n                        <PrivateRoute\n                            exact\n                            path=\"/animal/:id\"\n                            component={React.lazy(() => import('./pages/AnimalDetailsPage'))}\n                        />\n                        <Route\n                            exact\n                            path=\"/search\"\n                            component={React.lazy(() => import('./pages/PageNotImplemented'))}\n                        />\n                        <Route exact path=\"/login\" component={React.lazy(() => import('./pages/PageNotImplemented'))} />\n                        <Route\n                            exact\n                            path=\"/logout\"\n                            component={React.lazy(() => import('./pages/PageNotImplemented'))}\n                        />\n                        <Route exact path=\"/\" component={React.lazy(() => import('./pages/Home'))} />\n                        <Route component={PageNotFound} />\n                    </Switch>\n                </React.Suspense>\n                {!matchesLgScreen && <AppBottomNavigation />}\n            </div>\n            <LocationDisplay />\n        </ThemeProvider>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React, { ReactChild } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport config from '../../config';\n\nconst Auth0ProviderWithHistory = ({ children }: { children: ReactChild }) => {\n    const history = useHistory();\n\n    const onRedirectCallback = (appState: any) => {\n        history.push(appState?.returnTo || window.location.pathname);\n    };\n\n    return (\n        <Auth0Provider\n            domain={config.AUTH0_DOMAIN}\n            clientId={config.AUTH0_CLIENT_ID}\n            redirectUri={window.location.origin}\n            audience={config.AUTH0_AUDIENCE_URL}\n            onRedirectCallback={onRedirectCallback}\n        >\n            {children}\n        </Auth0Provider>\n    );\n};\n\nexport default Auth0ProviderWithHistory;\n","import React, { ReactChild } from 'react';\n\nimport { ApolloClient, ApolloProvider, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport config from '../config';\n\nconst AuthorizedApolloProvider = ({ children }: { children: ReactChild }) => {\n    const { getAccessTokenSilently } = useAuth0();\n\n    const httpLink = createHttpLink({\n        uri: config.GRAPHQL_URL, // your URI here...\n    });\n\n    const authLink = setContext(async () => {\n        const token = await getAccessTokenSilently();\n        return {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        };\n    });\n\n    const apolloClient = new ApolloClient({\n        link: authLink.concat(httpLink),\n        cache: new InMemoryCache(),\n        connectToDevTools: true,\n    });\n\n    return <ApolloProvider client={apolloClient}>{children}</ApolloProvider>;\n};\n\nexport default AuthorizedApolloProvider;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport Auth0ProviderWithHistory from './utils/auth/Auth0ProviderWithHistory';\nimport AuthorizedApolloProvider from './utils/AuthorizedApolloProvider';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Auth0ProviderWithHistory>\n                <AuthorizedApolloProvider>\n                    <App />\n                </AuthorizedApolloProvider>\n            </Auth0ProviderWithHistory>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","interface Config {\n    GRAPHQL_URL: string;\n    AUTH0_DOMAIN: string;\n    AUTH0_CLIENT_ID: string;\n    AUTH0_AUDIENCE_URL: string;\n    PUBLIC_URL: string;\n}\n\nconst config: Config = {\n    GRAPHQL_URL: process.env.REACT_APP_GRAPHQL_URL!,\n    AUTH0_DOMAIN: process.env.REACT_APP_AUTH0_DOMAIN!,\n    AUTH0_CLIENT_ID: process.env.REACT_APP_AUTH0_CLIENT_ID!,\n    AUTH0_AUDIENCE_URL: process.env.REACT_APP_AUTH0_AUTH_AUDIENCE!,\n    PUBLIC_URL: process.env.PUBLIC_URL!,\n};\n\nexport default config;\n"],"sourceRoot":""}