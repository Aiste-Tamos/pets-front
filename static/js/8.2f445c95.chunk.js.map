{"version":3,"sources":["utils/string.ts","utils/animal.ts","pages/Page.tsx","components/animal/AnimalListItem.tsx","components/animal/AnimalsList.tsx","components/animal/AnimalsTable.tsx","components/animal/ViewSelector.tsx","components/animal/AnimalsListContainer.tsx","pages/Animals.tsx"],"names":["capitalizeFirstLetter","value","charAt","toUpperCase","slice","getAnimalAge","birthTimestamp","distance","formatDistance","Number","Date","locale","ltLocale","getAnimalWeight","weight","Page","children","action","title","PageHeading","classes","useStyles","container","spacing","className","root","item","xs","variant","color","endAlign","makeStyles","theme","marginBottom","paddingBottom","textAlign","AnimalsListItem","animal","Grid","md","lg","ListItem","component","NavLink","to","id","ListItemAvatar","avatar","Avatar","alt","src","imageUrl","name","ListItemText","Box","Typography","display","details","birthDate","pt","alignItems","backgroundColor","fade","palette","background","paper","borderRadius","transition","transitions","create","easing","easeIn","duration","shortest","transform","boxShadow","paddingTop","AnimalsList","animals","map","AnimalsTable","history","useHistory","TableContainer","Table","table","size","aria-label","TableHead","TableRow","headRow","TableCell","align","head","TableBody","hover","onClick","animalId","push","row","AnimalsViewType","primary","dark","text","secondary","width","cursor","textDecoration","ViewSelector","onChange","ToggleButtonGroup","exclusive","e","val","ToggleButton","LIST","TABLE","GET_ANIMALS_QUERY","AnimalsListContainer","viewType","useQuery","loading","error","data","Skeleton","animation","height","length","Animals","useTheme","useState","setViewType","mobile","useMediaQuery","breakpoints","down","useEffect"],"mappings":"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","file":"static/js/8.2f445c95.chunk.js","sourcesContent":["export const capitalizeFirstLetter = (value: string): string => value.charAt(0).toUpperCase() + value.slice(1);\n","import { formatDistance } from 'date-fns';\nimport ltLocale from 'date-fns/locale/lt';\n\nimport { capitalizeFirstLetter } from './string';\n\nexport const getAnimalAge = (birthTimestamp: string | null = ''): string => {\n    if (birthTimestamp) {\n        const distance = formatDistance(Number(birthTimestamp), new Date(), { locale: ltLocale });\n        return capitalizeFirstLetter(distance);\n    }\n\n    return '';\n};\n\nexport const getAnimalWeight = (weight: number): string => (weight ? `${weight}kg` : '');\n","import React from 'react';\n\nimport { Box } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\ninterface PageProps {\n    children: React.ReactNode;\n    action?: React.ReactNode;\n    title?: string;\n}\n\nexport default function Page({ children, action, title }: PageProps) {\n    return (\n        <Box>\n            {title && <PageHeading title={title} action={action} />}\n            {children}\n        </Box>\n    );\n}\n\ninterface PageHeadingProps {\n    title: string;\n    action?: React.ReactNode;\n}\n\nfunction PageHeading({ title, action }: PageHeadingProps) {\n    const classes = useStyles();\n    return (\n        <Grid container spacing={2} className={classes.root}>\n            <Grid item xs={10}>\n                <Typography className={classes.title} variant=\"h3\" color=\"textSecondary\">\n                    {title}\n                </Typography>\n            </Grid>\n            {action && (\n                <Grid item xs={2} className={classes.endAlign}>\n                    {action}\n                </Grid>\n            )}\n            <Grid item xs={12}>\n                <Divider />\n            </Grid>\n        </Grid>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(2),\n    },\n    title: {\n        paddingBottom: theme.spacing(1),\n    },\n    endAlign: {\n        textAlign: 'end',\n    },\n}));\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { fade, Theme } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Typography from '@material-ui/core/Typography';\nimport { Animal } from '../../graphql/types';\nimport { getAnimalAge } from '../../utils/animal';\n\ninterface AnimalsListItemProps {\n    animal: Animal;\n}\n\nexport default function AnimalsListItem({ animal }: AnimalsListItemProps) {\n    const classes = useStyles();\n    return (\n        <Grid item xs={12} md={6} lg={4}>\n            <ListItem className={classes.item} color=\"secondary\" component={NavLink} to={`/animal/${animal.id}`}>\n                <ListItemAvatar className={classes.avatar}>\n                    <Avatar\n                        alt=\"Animal picture\"\n                        src={animal.imageUrl ? animal.imageUrl : `https://eu.ui-avatars.com/api/?name=${animal.name}`}\n                    />\n                </ListItemAvatar>\n                <ListItemText>\n                    <Box>\n                        <Typography variant=\"subtitle1\" display=\"inline\" color=\"textPrimary\">\n                            {`Dog ${animal.name}`}\n                        </Typography>\n                        <Typography variant=\"body1\" color=\"textSecondary\" display=\"inline\">\n                            {` - ${getAnimalAge(animal.details?.birthDate)}`}\n                        </Typography>\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            check-in date\n                        </Typography>\n                    </Box>\n                    <Box pt={1}>\n                        <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\n                            {`1.6kg black male Puddle, born in ${getAnimalAge(animal.details?.birthDate)}`}\n                        </Typography>\n                    </Box>\n                </ListItemText>\n            </ListItem>\n        </Grid>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    item: {\n        alignItems: 'flex-start',\n        backgroundColor: fade(theme.palette.background.paper, 0.4),\n        borderRadius: 4,\n        transition: theme.transitions.create(['box-shadow', 'transform'], {\n            easing: theme.transitions.easing.easeIn,\n            duration: theme.transitions.duration.shortest,\n        }),\n        '&:hover': {\n            transform: 'translateY(-2px)',\n            boxShadow: '0 4px 8px rgba(0, 0, 0, .2)',\n        },\n    },\n    avatar: {\n        paddingTop: theme.spacing(1),\n    },\n}));\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport { Animal } from '../../graphql/types';\nimport AnimalsListItem from './AnimalListItem';\n\ninterface AnimalsListProps {\n    animals: Animal[];\n}\n\nexport default function AnimalsList({ animals }: AnimalsListProps) {\n    return (\n        <Grid container component=\"ul\" spacing={2}>\n            {animals.map(animal => (\n                <AnimalsListItem key={animal.id} animal={animal} />\n            ))}\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { fade, TableContainer, Theme } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Animal } from '../../graphql/types';\nimport { getAnimalAge } from '../../utils/animal';\n\ninterface AnimalsTableProps {\n    animals: Animal[];\n}\n\nexport default function AnimalsTable({ animals }: AnimalsTableProps) {\n    const history = useHistory();\n    const classes = useStyles();\n\n    const onRowClick = (animalId: number) => {\n        history.push(`/animal/${animalId}`);\n    };\n\n    return (\n        <TableContainer>\n            <Table className={classes.table} size=\"small\" aria-label=\"animals\">\n                <TableHead>\n                    <TableRow className={classes.headRow}>\n                        <TableCell align=\"center\" className={classes.head} />\n                        <TableCell align=\"center\" className={classes.head}>\n                            Specie\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Name\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Breed\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Weight, kg\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Age\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Checked in\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {animals.map(animal => (\n                        <TableRow key={animal.id} hover onClick={() => onRowClick(animal.id)} className={classes.row}>\n                            <TableCell align=\"center\">\n                                <Avatar\n                                    alt=\"Animal picture\"\n                                    src={\n                                        animal.imageUrl\n                                            ? animal.imageUrl\n                                            : `https://eu.ui-avatars.com/api/?name=${animal.name}`\n                                    }\n                                />\n                            </TableCell>\n                            <TableCell align=\"center\">Dog</TableCell>\n                            <TableCell align=\"center\">{animal.name}</TableCell>\n                            <TableCell align=\"center\">Puddle</TableCell>\n                            <TableCell align=\"center\">{animal.details?.weight}</TableCell>\n                            <TableCell align=\"center\">{getAnimalAge(animal.details!.birthDate!)}</TableCell>\n                            <TableCell align=\"center\">check-in date</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    headRow: {\n        backgroundColor: fade(theme.palette.primary.dark, 0.75),\n    },\n    head: {\n        color: theme.palette.text.secondary,\n    },\n    table: {\n        width: '100%',\n        backgroundColor: fade(theme.palette.background.paper, 0.4),\n    },\n    row: {\n        cursor: 'pointer',\n        textDecoration: 'none',\n    },\n}));\n","import React from 'react';\n\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport { ToggleButtonGroup } from '@material-ui/lab';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\n\ninterface ViewSelectorProps {\n    value: AnimalsViewType;\n    onChange: (type: AnimalsViewType) => void;\n}\n\nexport default function ViewSelector({ value, onChange }: ViewSelectorProps) {\n    return (\n        <ToggleButtonGroup\n            size=\"small\"\n            exclusive\n            value={value}\n            onChange={(e, val) => onChange(val as AnimalsViewType)}\n            aria-label=\"view selector\"\n        >\n            <ToggleButton value={AnimalsViewType.LIST} aria-label={AnimalsViewType.LIST}>\n                <ViewModuleIcon />\n            </ToggleButton>\n            <ToggleButton value={AnimalsViewType.TABLE} aria-label={AnimalsViewType.TABLE}>\n                <ReorderIcon />\n            </ToggleButton>\n        </ToggleButtonGroup>\n    );\n}\n\nexport enum AnimalsViewType {\n    LIST = 'list',\n    TABLE = 'table',\n}\n","import { loader } from 'graphql.macro';\nimport React from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Animal } from '../../graphql/types';\nimport AnimalsList from './AnimalsList';\nimport AnimalsTable from './AnimalsTable';\nimport { AnimalsViewType } from './ViewSelector';\n\nconst GET_ANIMALS_QUERY = loader('../../graphql/queries/animal-list.graphql');\n\ninterface Response {\n    animals: Animal[];\n}\n\ninterface AnimalsListContainerProps {\n    viewType: AnimalsViewType;\n}\n\nexport default function AnimalsListContainer({ viewType }: AnimalsListContainerProps) {\n    const { loading, error, data } = useQuery<Response>(GET_ANIMALS_QUERY);\n    if (loading) {\n        return <Skeleton animation=\"wave\" height=\"70vh\" />;\n    }\n\n    if (error) {\n        // TODO: replace with proper UI elements\n        return <p>Error!</p>;\n    }\n\n    if (!data?.animals.length) {\n        // TODO: replace with proper UI elements\n        return <p>No data</p>;\n    }\n\n    if (viewType === AnimalsViewType.TABLE) {\n        return <AnimalsTable animals={data.animals} />;\n    }\n\n    return <AnimalsList animals={data.animals} />;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AnimalsListContainer from '../components/animal/AnimalsListContainer';\nimport ViewSelector, { AnimalsViewType } from '../components/animal/ViewSelector';\nimport Page from './Page';\n\nfunction Animals() {\n    const theme = useTheme();\n    // TODO: extract selectedViewType to context or localStore\n    const [viewType, setViewType] = useState<AnimalsViewType>(AnimalsViewType.LIST);\n    const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n    useEffect(() => {\n        if (mobile && viewType === AnimalsViewType.TABLE) {\n            setViewType(AnimalsViewType.LIST);\n        }\n    }, [mobile, viewType]);\n\n    const handleViewChange = () => {\n        setViewType(viewType === AnimalsViewType.TABLE ? AnimalsViewType.LIST : AnimalsViewType.TABLE);\n    };\n\n    return (\n        <Page title=\"Animals List\" action={!mobile && <ViewSelector value={viewType} onChange={handleViewChange} />}>\n            <AnimalsListContainer viewType={viewType} />\n        </Page>\n    );\n}\n\nexport default Animals;\n"],"sourceRoot":""}